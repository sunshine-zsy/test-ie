{"version":3,"file":"js/621-legacy.9c0e9069.js","mappings":"8QAGO,SAASA,EAAYC,GAC1B,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,yBACLC,OAAQ,MACRH,OAAAA,GAEJ,CAGO,SAASI,EAAeC,GAC7B,OAAOJ,EAAAA,EAAAA,GAAQ,CACbC,IAAK,yBAAFI,OAA2BD,GAC9BF,OAAQ,OAEZ,CAGO,SAASI,IACd,OAAON,EAAAA,EAAAA,GAAQ,CACbC,IAAK,2CACLC,OAAQ,OAEZ,CAGO,SAASK,IACd,OAAOP,EAAAA,EAAAA,GAAQ,CACbC,IAAK,6CACLC,OAAQ,OAEZ,CAGO,SAASM,EAAgBT,GAC9B,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,yBACLC,OAAQ,MACRH,OAAAA,GAEJ,C,gPCvCO,SAASU,EAAYV,GAC1B,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,0BACLC,OAAQ,MACRH,OAAAA,GAEJ,CAGO,SAASW,EAAcC,GAC5B,OAAOX,EAAAA,EAAAA,GAAQ,CACbC,IAAK,gBAAFI,OAAkBM,GACrBT,OAAQ,OAEZ,CAGO,SAASU,EAAaD,GAC3B,OAAOX,EAAAA,EAAAA,GAAQ,CAEbC,IAAK,eAAFI,OAAiBM,GACpBT,OAAQ,OAEZ,CAGO,SAASW,EAAUC,GACxB,OAAOd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,4BACLC,OAAQ,OACRY,KAAAA,GAEJ,CAGO,SAASC,EAAYD,GAC1B,OAAOd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,8BACLC,OAAQ,OACRY,KAAAA,GAEJ,CAGO,SAASE,EAAmBL,GACjC,OAAOX,EAAAA,EAAAA,GAAQ,CACbC,IAAK,mBAAFI,OAAqBM,GACxBT,OAAQ,OAEZ,CAGO,SAASe,EAAgBH,GAC9B,OAAOd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,iCACLC,OAAQ,OACRY,KAAMA,GAEV,CAGO,SAASI,EAAYJ,GAC1B,OAAOd,EAAAA,EAAAA,GAAQ,CACbC,IAAK,iBACLC,OAAQ,OACRY,KAAMA,GAEV,C,kGCtEIK,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOP,EAAIQ,QAASC,WAAW,YAAYC,YAAY,kBAAkB,CAAEV,EAAIW,SAASC,OAAS,EAAGV,EAAG,MAAM,CAACQ,YAAY,aAAaV,EAAIa,GAAIb,EAAIW,SAAU,SAASG,GAAM,OAAOZ,EAAG,MAAM,CAACa,IAAID,EAAKvB,GAAGmB,YAAY,aAAa,CAACR,EAAG,MAAM,CAACQ,YAAY,cAAc,CAACV,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKT,SAASH,EAAG,MAAM,CAACQ,YAAY,aAAa,CAAoB,SAAlBV,EAAIkB,UAAsB,CAAChB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKK,WAAW,MAAMnB,EAAIiB,GAAGH,EAAKM,cAAclB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKO,cAAcnB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,SAAS,CAACoB,MAAM,CAAC,KAAO,QAAQ,KAAOR,EAAKS,aAAa,CAACvB,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKU,YAAY,IAAI,CAACtB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKW,OAAO,SAASvB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKY,eAAexB,EAAG,MAAM,CAACQ,YAAY,YAAY,CAACR,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,WAAWd,EAAG,SAAS,CAACoB,MAAM,CAAC,KAAO,QAAQ,KAAOR,EAAKW,OAASX,EAAKa,UAAY,UAAY,WAAW,CAAC3B,EAAIgB,GAAG,IAAIhB,EAAIiB,GAAGH,EAAKW,OAASX,EAAKa,UAAY,KAAO,OAAO,QAAQ,KAAK,GAAGzB,EAAG,MAAM,CAACQ,YAAY,eAAe,CAACR,EAAG,MAAM,CAACQ,YAAY,cAAc,CAACR,EAAG,OAAO,CAACQ,YAAY,QAAQ,CAACV,EAAIgB,GAAG,MAAMhB,EAAIiB,GAAGH,EAAKc,UAAU,QAAQ1B,EAAG,OAAO,CAACQ,YAAY,SAAS,CAACV,EAAIgB,GAAG,MAAMhB,EAAIiB,GAAGH,EAAKe,YAAY,OAAO3B,EAAG,OAAO,CAACQ,YAAY,QAAQ,CAACV,EAAIgB,GAAG,OAAOhB,EAAIiB,GAAGH,EAAKa,WAAW,SAASzB,EAAG,MAAM,CAACQ,YAAY,WAAW,CAAoB,SAAlBV,EAAIkB,UAAsB,CAAChB,EAAG,SAAS,CAACoB,MAAM,CAAC,KAAO,UAAU,KAAO,UAAU,CAACtB,EAAIgB,GAAGhB,EAAIiB,GAAGH,EAAKgB,kBAAkB5B,EAAG,YAAY,CAACoB,MAAM,CAAC,KAAO,UAAU,KAAO,QAAQ,SAA2B,QAAhBR,EAAKU,QAAkBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhC,EAAIP,UAAUqB,EAAK,IAAI,CAACd,EAAIgB,GAAG,WAAW,CAACd,EAAG,YAAY,CAACoB,MAAM,CAAC,KAAO,UAAU,KAAO,SAASS,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhC,EAAIiC,eAAenB,EAAK,IAAI,CAACd,EAAIgB,GAAG,YAAY,MAAM,GAAG,GAAGd,EAAG,WAAW,CAACoB,MAAM,CAAC,YAAc,YAAYpB,EAAG,MAAM,CAACQ,YAAY,wBAAwB,CAACR,EAAG,gBAAgB,CAACoB,MAAM,CAAC,eAAetB,EAAIkC,QAAQ,aAAa,CAAC,GAAI,GAAI,GAAI,KAAK,YAAYlC,EAAImC,SAAS,MAAQnC,EAAIoC,MAAM,OAAS,0CAA0C,WAAa,IAAIL,GAAG,CAAC,qBAAqB,SAASC,GAAQhC,EAAIkC,QAAQF,CAAM,EAAE,sBAAsB,SAASA,GAAQhC,EAAIkC,QAAQF,CAAM,EAAE,kBAAkB,SAASA,GAAQhC,EAAImC,SAASH,CAAM,EAAE,mBAAmB,SAASA,GAAQhC,EAAImC,SAASH,CAAM,EAAE,cAAchC,EAAIqC,iBAAiB,iBAAiBrC,EAAIsC,wBAAwB,IAAI,EAC14F,EACIC,EAAkB,G,sMCGtBC,EAAAA,WAAIC,IAAIC,EAAAA,IAER,IAAMC,EAAS,CACb,CACEC,KAAM,SACNvC,KAAM,QACNwC,UAAW,WAAF,OAAQ,sDAAuB,EACxCC,KAAM,CAAEC,MAAO,OAEjB,CACEH,KAAM,IACNC,UAAWG,EAAAA,EACXC,SAAU,UACVC,SAAU,CACR,CACEN,KAAM,SACNvC,KAAM,SACNwC,UAAW,WAAF,OAAQ,sDAAkC,EACnDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,OACNvC,KAAM,OACNwC,UAAW,WAAF,OAAQ,uCAAgC,EACjDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,KACNvC,KAAM,KACNwC,UAAW,WAAF,OAAQ,8BAA8B,EAC/CC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,oBACNvC,KAAM,eACNwC,UAAW,WAAF,OAAQ,sDAAmC,EACpDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,MAI1C,CACEP,KAAM,YACNC,UAAWG,EAAAA,EACXE,SAAU,CACR,CACEN,KAAM,GACNvC,KAAM,WACNwC,UAAW,WAAF,OAAQ,sDAAgC,EACjDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,WACNvC,KAAM,eACNwC,UAAW,WAAF,OAAQ,6BAA+B,EAChDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,MAI1C,CACEP,KAAM,uBACNvC,KAAM,iBACNwC,UAAW,WAAF,OAAQ,8BAAqC,EACtDC,KAAM,CACJC,MAAO,SAGX,CACEH,KAAM,QACNC,UAAWG,EAAAA,EACXE,SAAU,CACR,CACEN,KAAM,GACNvC,KAAM,OACNwC,UAAW,WAAF,OAAQ,uCAAgC,EACjDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,YACNvC,KAAM,YACNwC,UAAW,WAAF,OAAQ,6BAAgC,EACjDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,YACNvC,KAAM,YACNwC,UAAW,WAAF,OAAQ,sDAAgC,EACjDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,aACNvC,KAAM,aACNwC,UAAW,WAAF,OAAQ,8BAAiC,EAClDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,IAEtC,CACEP,KAAM,SACNvC,KAAM,aACNwC,UAAW,WAAF,OAAQ,8BAAiC,EAClDC,KAAM,CAAEC,MAAO,OAAQI,aAAa,OAMtCC,EAAS,IAAIV,EAAAA,GAAU,CAC3BC,OAAAA,EACAU,eAAgB,WAAF,MAAS,CAAEC,EAAG,EAAG,IAI3BC,EAAY,CAAC,UAEnBH,EAAOI,WAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,EAAC,SAAAC,EAAOC,EAAIC,EAAMC,GAAI,IAAAC,EAAAC,EAAAjB,EAAAkB,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,EAAA,SAAAC,GAAA,eAAAA,EAAAC,EAAAD,EAAAE,GAAA,OAOlC,GANGN,EAAQO,aAAaC,QAAQ,SAEnCC,EAAAA,EAAOC,MAAM,QAAS,CACpBZ,KAAMA,EAAKa,SACXd,GAAIA,EAAGc,SACPC,WAAYZ,IACXI,EAAAC,EAAA,EAGe,WAAZR,EAAGlB,KAAiB,CAAAyB,EAAAE,EAAA,QAOrB,OANGN,EAEFD,EAAK,KAGLA,IACDK,EAAAS,EAAA,UAICb,GAKEV,EAAUwB,SAASjB,EAAGlB,MAH1BoB,KAOQf,GAAmB,QAARiB,EAAAJ,EAAGkB,aAAK,IAAAd,OAAA,EAARA,EAAUjB,WAAYa,EAAGc,SAC1CZ,EAAK,CACHpB,KAAM,SACNoC,MAAO,CACL/B,SAAAA,MAIPoB,EAAAE,EAAA,eAAAF,EAAAC,EAAA,EAAAH,EAAAE,EAAAY,EAEDP,EAAAA,EAAOQ,MAAM,UAASf,GACtBH,EAAK,UAAU,cAAAK,EAAAS,EAAA,KAAAjB,EAAA,iBAElB,gBAAAsB,EAAAC,EAAAC,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,EA3CgB,ICKjB,OACAlF,KAAA,aACAX,KAAA,WACA,OACAwB,UAAA,OACAsE,UAAA,GACAC,UAAA,GACA9E,SAAA,GACAH,SAAA,EACA0B,QAAA,EACAC,SAAA,GACAC,MAAA,EAEAsD,cAAA,CACA,GAAAC,MAAA,MAAAC,KAAA,QACA,GAAAD,MAAA,MAAAC,KAAA,WACA,GAAAD,MAAA,MAAAC,KAAA,WAGAC,aAAA,GACAC,YAAA,KAEA,EACAC,QAAA,WACA,KAAAC,kBACA,KAAAC,eACA,EACAC,QAAA,CAEAF,gBAAA,eAAAG,EAAA,YAAAzC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,EAAA,SAAAC,IAAA,IAAAuC,EAAAjC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,EAAA,SAAAC,GAAA,eAAAA,EAAAC,EAAAD,EAAAE,GAAA,cAAAF,EAAAC,EAAA,EAAAD,EAAAE,EAAA,GAEA7F,EAAAA,EAAAA,IAAA,CACAwD,QAAA,EACAC,SAAA,GACAkE,SAAA,mBACA,OAJAD,EAAA/B,EAAAY,EAMA,MAAAmB,EAAAE,OAEAH,EAAAN,cAAAO,EAAAG,MAAA,IAAAC,OAAA,SAAAC,EAAAC,GAKA,OAJAD,EAAAC,EAAAC,WAAA,CACAhB,MAAAe,EAAAE,UACAC,OAAA,MAAAH,EAAAC,WAEAF,CACA,OACApC,EAAAE,EAAA,eAAAF,EAAAC,EAAA,EAAAH,EAAAE,EAAAY,EAEA6B,QAAA5B,MAAA,cAAAf,GAAA,cAAAE,EAAAS,EAAA,KAAAjB,EAAA,gBAnBAH,EAqBA,EAGAuC,cAAA,eAAAc,EAAA,YAAArD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,EAAA,SAAAoD,IAAA,IAAArI,EAAAyH,EAAAa,EAAAC,EAAA,OAAAvD,EAAAA,EAAAA,KAAAS,EAAA,SAAA+C,GAAA,eAAAA,EAAA7C,EAAA6C,EAAA5C,GAAA,OAOA,GAPA4C,EAAA7C,EAAA,EAEAyC,EAAAvG,SAAA,EACA7B,EAAA,CACAuD,QAAA6E,EAAA7E,QACAC,SAAA4E,EAAA5E,SACAY,MAAAgE,EAAAvB,WAGA,SAAAuB,EAAA7F,UAAA,CAAAiG,EAAA5C,EAAA,QAKA,OAHAwC,EAAAtB,WAAA,IAAAsB,EAAAtB,UAAA7E,SACAjC,EAAAwC,UAAA4F,EAAAK,eAAAL,EAAAtB,UAAA,IACA9G,EAAAyC,QAAA2F,EAAAK,eAAAL,EAAAtB,UAAA,KACA0B,EAAA5C,EAAA,GACAlF,EAAAA,EAAAA,IAAAV,GAAA,OAAAyH,EAAAe,EAAAlC,EAEA,MAAAmB,EAAAE,OACAS,EAAApG,UAAAyF,EAAAG,MAAA,IAAAc,IAAA,SAAAX,GAAA,IAAAY,EAAAC,EAAAC,EAAAC,EACAC,EAAAX,EAAAlB,aAAAa,EAAAiB,WAAA,GACA,OACApI,GAAAmH,EAAAnH,GACAqI,QAAA,QAAAN,EAAAZ,EAAAmB,uBAAA,IAAAP,OAAA,EAAAA,EAAA/H,GACAc,KAAAqG,EAAA3D,OAAA,QACA5B,UAAAuF,EAAAvF,UACAC,QAAAsF,EAAAtF,QACAC,SAAA,IAAAqF,EAAAoB,OAAA,QAAA7I,OAAAyH,EAAAoB,OAAA,KACAtG,QAAA,QAAA+F,EAAAR,EAAArB,cAAAgB,EAAAqB,kBAAA,IAAAR,OAAA,EAAAA,EAAA5B,QAAA,KACApE,YAAA,QAAAiG,EAAAT,EAAArB,cAAAgB,EAAAqB,kBAAA,IAAAP,OAAA,EAAAA,EAAA5B,OAAA,OACAhE,SAAA8E,EAAAsB,UACAnG,YAAA,QAAA4F,EAAAf,EAAAmB,uBAAA,IAAAJ,OAAA,EAAAA,EAAA5F,aAAA,EACAF,UAAA+E,EAAAuB,cAAA,EACApB,OAAAa,EAAAb,OACA/E,cAAA4F,EAAA/B,OAAA,KACAuC,QAAAxB,EAAAwB,SAAA,GAEA,GACAnB,EAAA3E,MAAAgE,EAAAhE,OACA+E,EAAA5C,EAAA,sBAAA4C,EAAA5C,EAAA,GAGA3F,EAAAA,EAAAA,YAAA,CACAC,IAAA,8BACAC,OAAA,MACAH,OAAAA,IACA,OAJAyH,EAAAe,EAAAlC,EAMA,MAAAmB,EAAAE,OACAS,EAAApG,UAAAyF,EAAAG,MAAA,IAAAc,IAAA,SAAAX,GAAA,OACAnH,GAAAmH,EAAAnH,GACA4I,OAAAzB,EAAAyB,OACA9H,KAAAqG,EAAA0B,SACA3G,MAAAiF,EAAA2B,cAAA,EACA3G,SAAAgF,EAAA4B,WACA1G,SAAA8E,EAAA6B,YAAA,EACA1G,WAAA6E,EAAA7E,YAAA,EACAF,UAAA+E,EAAAuB,cAAA,EACAO,OAAA,IAAA9B,EAAA8B,OACA,GACAzB,EAAA3E,MAAAgE,EAAAhE,OACA,OAAA+E,EAAA5C,EAAA,eAAA4C,EAAA7C,EAAA,EAAA4C,EAAAC,EAAAlC,EAGA6B,QAAA5B,MAAA,YAAAgC,GACAH,EAAA0B,SAAAvD,MAAA,mBAEA,OAFAiC,EAAA7C,EAAA,EAEAyC,EAAAvG,SAAA,EAAA2G,EAAAuB,EAAA,iBAAAvB,EAAArC,EAAA,KAAAkC,EAAA,oBAlEAtD,EAoEA,EAGAjE,UAAA,SAAAqB,GAGA,IAAA6H,EAAAC,KAAAC,MAAArE,aAAAC,QAAA,mBAEA,GADAqC,QAAAgC,IAAA,WAAAF,KAAAC,MAAArE,aAAAC,QAAA,eACAkE,EAAAI,OAGA,OAFA,KAAAN,SAAAvD,MAAA,uBACA,KAAA8D,QAAAC,KAAA,UAKA,KAAAD,QAAAC,KAAA,CACA5I,KAAA,YACA1B,OAAA,CACAY,GAAAuB,EAAA8G,SAEA5C,MAAA,CACAmD,OAAArH,EAAAvB,GACA2J,UAAAP,EAAAI,OACAhG,MAAAjC,EAAAT,KACAuB,SAAAd,EAAAc,SACAC,WAAAf,EAAAe,WACAF,UAAAb,EAAAa,YAGA,EAGAwH,YAAA,eAAAC,EAAA,KAEA,KAAAtD,aACAuD,aAAA,KAAAvD,aAIA,KAAAA,YAAAwD,WAAA,WACAF,EAAAG,cACA,MACA,EAGAA,aAAA,WAEA,KAAAzD,aACAuD,aAAA,KAAAvD,aAEA,KAAA5D,QAAA,EACA,KAAA+D,eACA,EAGAuD,YAAA,WACA,KAAAhE,UAAA,GACA,KAAAC,UAAA,GACA,KAAA8D,cACA,EAGAlH,iBAAA,SAAAoH,GACA,KAAAtH,SAAAsH,EACA,KAAAvH,QAAA,EACA,KAAA+D,eACA,EAGA3D,oBAAA,SAAAmH,GACA,KAAAvH,QAAAuH,EACA,KAAAxD,eACA,EAGAmB,eAAA,SAAAsC,GACA,IAAAA,EAAA,SACA,IAAAC,EAAA,IAAAC,KAAAF,GACAG,EAAAF,EAAAG,cACAC,EAAAC,OAAAL,EAAAM,WAAA,GAAAC,SAAA,OACAC,EAAAH,OAAAL,EAAAS,WAAAF,SAAA,OACAG,EAAAL,OAAAL,EAAAW,YAAAJ,SAAA,OACAK,EAAAP,OAAAL,EAAAa,cAAAN,SAAA,OACAO,EAAAT,OAAAL,EAAAe,cAAAR,SAAA,OACA,SAAAjL,OAAA4K,EAAA,KAAA5K,OAAA8K,EAAA,KAAA9K,OAAAkL,EAAA,KAAAlL,OAAAoL,EAAA,KAAApL,OAAAsL,EAAA,KAAAtL,OAAAwL,EACA,EAGAE,eAAA,eAAAC,EAAA,YAAAlH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,EAAA,SAAAiH,IAAA,OAAAlH,EAAAA,EAAAA,KAAAS,EAAA,SAAA0G,GAAA,eAAAA,EAAAvG,GAAA,OAGA,OAFAqG,EAAA1I,QAAA,EACA0I,EAAApF,UAAA,GACAoF,EAAAnF,UAAA,GAAAqF,EAAAvG,EAAA,EACAqG,EAAA3E,gBAAA,cAAA6E,EAAAhG,EAAA,KAAA+F,EAAA,GAJAnH,EAKA,EAGAzB,eAAA,SAAAnB,GAEA,KAAAkI,QAAAC,KAAA,CACArG,KAAA,gBAAA3D,OAAA6B,EAAAvB,IACAyF,MAAA,CACAmD,OAAArH,EAAAqH,OACA9H,KAAAS,EAAAT,KACAoB,MAAAX,EAAAW,MACAI,WAAAf,EAAAe,WACAF,UAAAb,EAAAa,UACAD,SAAAZ,EAAAY,WAGA,GAGAqJ,cAAA,WACA,KAAAjF,aACAuD,aAAA,KAAAvD,YAEA,GCvW6P,I,WCQzPjD,GAAY,OACd,EACA9C,EACAwC,GACA,EACA,KACA,WACA,MAIF,EAAeM,E","sources":["webpack://pc-exam-student/./src/api/system.js","webpack://pc-exam-student/./src/api/exam.js","webpack://pc-exam-student/./src/views/exam/index.vue","webpack://pc-exam-student/./src/api/request.js","webpack://pc-exam-student/src/views/exam/index.vue","webpack://pc-exam-student/./src/views/exam/index.vue?5c5e","webpack://pc-exam-student/./src/views/exam/index.vue?c077"],"sourcesContent":["//import request from './request'\r\nimport request from '@/utils/request'\r\n// 获取字典数据列表\r\nexport function getDictList(params) {\r\n  return request({\r\n    url: '/system/dict/data/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 根据图片ID获取图片URL\r\nexport function getImagesByIds(ids) {\r\n  return request({\r\n    url: `/system/oss/listByIds/${ids}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取课程分类\r\nexport function getCourseCategoriesDict() {\r\n  return request({\r\n    url: '/system/dict/data/type/course_categories',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取题库分类\r\nexport function getRepoCategories() {\r\n  return request({\r\n    url: '/system/dict/data/type/question_repos_type',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取字典数据列表\r\nexport function getDictDataList(params) {\r\n  return request({\r\n    url: '/system/dict/data/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n} ","//import request from './request'\r\nimport request from '@/utils/request'\r\n// 获取考试列表\r\nexport function getExamList(params) {\r\n  return request({\r\n    url: '/exam/questionExam/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取考试详情\r\nexport function getExamDetail(id) {\r\n  return request({\r\n    url: `/exam/detail/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取试卷试题列表\r\nexport function getExamPaper(id) {\r\n  return request({\r\n    // url: `/exam/papgerTopic/${id}`,\r\n    url: `/exam/paper/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 开始考试\r\nexport function startExam(data) {\r\n  return request({\r\n    url: '/exam/examScore/startExam',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 提交试卷\r\nexport function submitPaper(data) {\r\n  return request({\r\n    url: '/exam/examSubmission/submit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取考试成绩详情\r\nexport function getExamScoreDetail(id) {\r\n  return request({\r\n    url: `/exam/examScore/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 结束电脑使用\r\nexport function endComputerInfo(data) {\r\n  return request({\r\n    url: '/exam/computer/endComputerInfo',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 新增考试电脑管理\r\nexport function addComputer(data) {\r\n  return request({\r\n    url: '/exam/computer',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"exam-container\"},[(_vm.examList.length > 0)?_c('div',{staticClass:\"exam-list\"},_vm._l((_vm.examList),function(exam){return _c('div',{key:exam.id,staticClass:\"exam-item\"},[_c('div',{staticClass:\"exam-title\"},[_vm._v(_vm._s(exam.name))]),_c('div',{staticClass:\"exam-info\"},[(_vm.activeTab === 'hall')?[_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"考试时间：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(exam.startTime)+\" ~ \"+_vm._s(exam.endTime))])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"考试机会：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(exam.chances))])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"考试状态：\")]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":exam.statusType}},[_vm._v(_vm._s(exam.status))])],1)]:[_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"考试得分：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(exam.score)+\"分\")])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"考试时间：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(exam.examTime))])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"是否及格：\")]),_c('el-tag',{attrs:{\"size\":\"small\",\"type\":exam.score >= exam.passScore ? 'success' : 'danger'}},[_vm._v(\" \"+_vm._s(exam.score >= exam.passScore ? '及格' : '不及格')+\" \")])],1)]],2),_c('div',{staticClass:\"exam-footer\"},[_c('div',{staticClass:\"score-info\"},[_c('span',{staticClass:\"time\"},[_vm._v(\"时长：\"+_vm._s(exam.duration)+\"分钟\")]),_c('span',{staticClass:\"total\"},[_vm._v(\"总分：\"+_vm._s(exam.totalScore)+\"分\")]),_c('span',{staticClass:\"pass\"},[_vm._v(\"及格分：\"+_vm._s(exam.passScore)+\"分\")])]),_c('div',{staticClass:\"actions\"},[(_vm.activeTab === 'hall')?[_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"small\"}},[_vm._v(_vm._s(exam.openTypeLabel))]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":exam.status !== '进行中'},on:{\"click\":function($event){return _vm.startExam(exam)}}},[_vm._v(\"进入考试\")])]:[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.viewExamDetail(exam)}}},[_vm._v(\"查看详情\")])]],2)])])}),0):_c('el-empty',{attrs:{\"description\":\"暂无考试信息\"}}),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.pageNum,\"page-sizes\":[10, 20, 50, 100],\"page-size\":_vm.pageSize,\"total\":_vm.total,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"background\":\"\"},on:{\"update:currentPage\":function($event){_vm.pageNum=$event},\"update:current-page\":function($event){_vm.pageNum=$event},\"update:pageSize\":function($event){_vm.pageSize=$event},\"update:page-size\":function($event){_vm.pageSize=$event},\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport Layout from '@/layout';\r\nimport logger from '@/utils/logger';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('@/views/login'),\r\n    meta: { title: '登录' }\r\n  },\r\n  {\r\n    path: '/',\r\n    component: Layout,\r\n    redirect: '/course',\r\n    children: [\r\n      {\r\n        path: 'course',\r\n        name: 'Course',\r\n        component: () => import('@/views/course/index.vue'),\r\n        meta: { title: '课程列表', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'exam',\r\n        name: 'Exam',\r\n        component: () => import('@/views/exam/index.vue'),\r\n        meta: { title: '考试中心', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'my',\r\n        name: 'My',\r\n        component: () => import('@/views/my/index.vue'),\r\n        meta: { title: '个人中心', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'course/detail/:id',\r\n        name: 'CourseDetail',\r\n        component: () => import('@/views/course/detail.vue'),\r\n        meta: { title: '课程详情', requireAuth: true }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/practice',\r\n    component: Layout,\r\n    children: [\r\n      {\r\n        path: '',\r\n        name: 'Practice',\r\n        component: () => import('@/views/practice/index'),\r\n        meta: { title: '刷题训练', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'exam/:id',\r\n        name: 'PracticeExam',\r\n        component: () => import('@/views/practice/exam'),\r\n        meta: { title: '练习模式', requireAuth: true }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/practice/detail/:id',\r\n    name: 'PracticeDetail',\r\n    component: () => import('@/views/practice/detail.vue'),\r\n    meta: {\r\n      title: '题库详情'\r\n    }\r\n  },\r\n  {\r\n    path: '/exam',\r\n    component: Layout,\r\n    children: [\r\n      {\r\n        path: '',\r\n        name: 'Exam',\r\n        component: () => import('@/views/exam/index.vue'),\r\n        meta: { title: '考试中心', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'check/:id',\r\n        name: 'ExamCheck',\r\n        component: () => import('@/views/exam/check.vue'),\r\n        meta: { title: '考试审核', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'paper/:id',\r\n        name: 'ExamPaper',\r\n        component: () => import('@/views/exam/paper.vue'),\r\n        meta: { title: '考试详情', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'detail/:id',\r\n        name: 'ExamDetail',\r\n        component: () => import('@/views/exam/detail.vue'),\r\n        meta: { title: '考试详情', requireAuth: true }\r\n      },\r\n      {\r\n        path: 'thanks',\r\n        name: 'ExamThanks',\r\n        component: () => import('@/views/exam/thanks.vue'),\r\n        meta: { title: '考试完成', requireAuth: true }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst router = new VueRouter({\r\n  routes,\r\n  scrollBehavior: () => ({ y: 0 }),\r\n});\r\n\r\n// 白名单路由\r\nconst whiteList = ['/login'];\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  logger.debug('路由跳转:', {\r\n    from: from.fullPath,\r\n    to: to.fullPath,\r\n    hasToken: !!token,\r\n  });\r\n\r\n  try {\r\n    if (to.path === '/login') {\r\n      if (token) {\r\n        // 已登录时访问登录页，重定向到首页\r\n        next('/');\r\n      } else {\r\n        // 未登录访问登录页，直接通过\r\n        next();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (token) {\r\n      // 已登录状态\r\n      next();\r\n    } else {\r\n      // 未登录状态\r\n      if (whiteList.includes(to.path)) {\r\n        next();\r\n      } else {\r\n        // 跳转到登录页面，并记录原始目标路径\r\n        const redirect = to.query?.redirect || to.fullPath;\r\n        next({\r\n          path: '/login',\r\n          query: {\r\n            redirect,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    logger.error('路由守卫错误:', error);\r\n    next('/login');\r\n  }\r\n});\r\n\r\n// 其他逻辑保持不变","<template>\r\n  <div class=\"exam-container\" v-loading=\"loading\">\r\n    <!-- 搜索和筛选区域 -->\r\n    <!-- <div class=\"search-area\">\r\n      <div class=\"tabs\">\r\n        <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\r\n          <el-tab-pane label=\"考试大厅\" name=\"hall\"></el-tab-pane>\r\n          <el-tab-pane label=\"我的考试\" name=\"my\"></el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <div class=\"search-box\">\r\n        <el-input\r\n          v-model=\"searchKey\"\r\n          placeholder=\"搜索考试名称\"\r\n          prefix-icon=\"el-icon-search\"\r\n          clearable\r\n          @keyup.enter.native=\"handleSearch\"\r\n          @clear=\"handleSearch\"\r\n          @input=\"handleInput\"\r\n          class=\"search-input\"\r\n        />\r\n        <el-date-picker\r\n          v-if=\"activeTab === 'hall'\"\r\n          v-model=\"dateRange\"\r\n          type=\"daterange\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          @change=\"handleSearch\"\r\n          class=\"date-picker\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- 考试列表 -->\r\n    <div v-if=\"examList.length > 0\" class=\"exam-list\">\r\n      <div v-for=\"exam in examList\" :key=\"exam.id\" class=\"exam-item\">\r\n        <div class=\"exam-title\">{{ exam.name }}</div>\r\n        <div class=\"exam-info\">\r\n          <template v-if=\"activeTab === 'hall'\">\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">考试时间：</span>\r\n              <span class=\"value\">{{ exam.startTime }} ~ {{ exam.endTime }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">考试机会：</span>\r\n              <span class=\"value\">{{ exam.chances }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">考试状态：</span>\r\n              <el-tag size=\"small\" :type=\"exam.statusType\">{{ exam.status }}</el-tag>\r\n            </div>\r\n          </template>\r\n          <template v-else>\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">考试得分：</span>\r\n              <span class=\"value\">{{ exam.score }}分</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">考试时间：</span>\r\n              <span class=\"value\">{{ exam.examTime }}</span>\r\n            </div>\r\n            <div class=\"info-row\">\r\n              <span class=\"label\">是否及格：</span>\r\n              <el-tag size=\"small\" :type=\"exam.score >= exam.passScore ? 'success' : 'danger'\">\r\n                {{ exam.score >= exam.passScore ? '及格' : '不及格' }}\r\n              </el-tag>\r\n            </div>\r\n          </template>\r\n        </div>\r\n        <div class=\"exam-footer\">\r\n          <div class=\"score-info\">\r\n            <span class=\"time\">时长：{{ exam.duration }}分钟</span>\r\n            <span class=\"total\">总分：{{ exam.totalScore }}分</span>\r\n            <span class=\"pass\">及格分：{{ exam.passScore }}分</span>\r\n          </div>\r\n          <div class=\"actions\">\r\n            <template v-if=\"activeTab === 'hall'\">\r\n              <el-tag type=\"success\" size=\"small\">{{ exam.openTypeLabel }}</el-tag>\r\n              <el-button \r\n                type=\"primary\" \r\n                size=\"small\"\r\n                :disabled=\"exam.status !== '进行中'\"\r\n                @click=\"startExam(exam)\"\r\n              >进入考试</el-button>\r\n            </template>\r\n            <template v-else>\r\n              <el-button \r\n                type=\"primary\" \r\n                size=\"small\"\r\n                @click=\"viewExamDetail(exam)\"\r\n              >查看详情</el-button>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 空状态 -->\r\n    <el-empty v-else description=\"暂无考试信息\"></el-empty>\r\n    \r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        :current-page.sync=\"pageNum\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size.sync=\"pageSize\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        background\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getExamList } from '@/api/exam'\r\nimport { getDictList } from '@/api/system'\r\nimport request from '@/api/request'  // 添加 request 导入\r\n\r\nexport default {\r\n  name: 'ExamCenter',\r\n  data() {\r\n    return {\r\n      activeTab: 'hall',\r\n      searchKey: '',\r\n      dateRange: [],\r\n      examList: [],\r\n      loading: false,\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      // 考试状态字典\r\n      examStateDict: {\r\n        '0': { label: '未开始', type: 'info' },\r\n        '1': { label: '进行中', type: 'success' },\r\n        '2': { label: '已结束', type: 'danger' }\r\n      },\r\n      // 开放类型字典\r\n      openTypeDict: {},\r\n      searchTimer: null, // 添加防抖定时器\r\n    }\r\n  },\r\n  created() {\r\n    this.getOpenTypeDict()\r\n    this.fetchExamList()\r\n  },\r\n  methods: {\r\n    // 获取开放类型字典\r\n    async getOpenTypeDict() {\r\n      try {\r\n        const res = await getDictList({\r\n          pageNum: 1,\r\n          pageSize: 10,\r\n          dictType: 'exam_open_type'\r\n        })\r\n        \r\n        if (res.code === 200) {\r\n          // 将字典数据转换为对象格式\r\n          this.openTypeDict = (res.rows || []).reduce((acc, item) => {\r\n            acc[item.dictValue] = {\r\n              label: item.dictLabel,\r\n              isFree: item.dictValue === '1' // 1表示免费\r\n            }\r\n            return acc\r\n          }, {})\r\n        }\r\n      } catch (error) {\r\n        console.error('获取开放类型字典失败:', error)\r\n      }\r\n    },\r\n\r\n    // 获取考试列表\r\n    async fetchExamList() {\r\n      try {\r\n        this.loading = true\r\n        const params = {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          title: this.searchKey\r\n        }\r\n\r\n        if (this.activeTab === 'hall') {\r\n          // 考试大厅参数\r\n          if (this.dateRange && this.dateRange.length === 2) {\r\n            params.startTime = this.formatDateTime(this.dateRange[0])\r\n            params.endTime = this.formatDateTime(this.dateRange[1])\r\n          }\r\n          const res = await getExamList(params)\r\n          \r\n          if (res.code === 200) {\r\n            this.examList = (res.rows || []).map(item => {\r\n              const openTypeInfo = this.openTypeDict[item.openType] || {}\r\n              return {\r\n                id: item.id,\r\n                paperId: item.questionPaperVo?.id,\r\n                name: item.title || '未命名考试',\r\n                startTime: item.startTime,\r\n                endTime: item.endTime,\r\n                chances: item.chance === -1 ? '不限' : `${item.chance}次`,\r\n                status: this.examStateDict[item.examState]?.label || '未知',\r\n                statusType: this.examStateDict[item.examState]?.type || 'info',\r\n                duration: item.totalTime,\r\n                totalScore: item.questionPaperVo?.totalScore || 0,\r\n                passScore: item.qualifyScore || 0,\r\n                isFree: openTypeInfo.isFree,\r\n                openTypeLabel: openTypeInfo.label || '未知',\r\n                content: item.content || ''\r\n              }\r\n            })\r\n            this.total = res.total\r\n          }\r\n        } else {\r\n          // 我的考试参数 - 修改接口地址\r\n          const res = await request({\r\n            url: '/exam/examScore/myScoreList',\r\n            method: 'get',\r\n            params\r\n          })\r\n          \r\n          if (res.code === 200) {\r\n            this.examList = (res.rows || []).map(item => ({\r\n              id: item.id,               // 考试成绩ID\r\n              examId: item.examId,       // 考试ID\r\n              name: item.examName,       // 考试名称\r\n              score: item.currentScore || 0,  // 考试得分\r\n              examTime: item.submitTime, // 考试时间\r\n              duration: item.finishTime || 0,  // 修改为 finshTime\r\n              totalScore: item.totalScore || 0,  // 总分\r\n              passScore: item.qualifyScore || 0, // 及格分\r\n              isPass: item.isPass === 1  // 是否及格\r\n            }))\r\n            this.total = res.total\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('获取考试列表失败:', error)\r\n        this.$message.error('获取考试列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    // 进入考试\r\n    startExam(exam) {\r\n\r\n      // 获取用户信息\r\n      const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\r\n      console.log('userInfo', JSON.parse(localStorage.getItem('userInfo')) )\r\n      if (!userInfo.userId) {\r\n        this.$message.error('用户信息获取失败，请重新登录')\r\n        this.$router.push('/login')\r\n        return\r\n      }\r\n      \r\n      // 跳转到试卷页面，并传递必要参数\r\n      this.$router.push({\r\n        name: 'ExamPaper',\r\n        params: {\r\n          id: exam.paperId // paperId作为路由参数\r\n        },\r\n        query: {\r\n          examId: exam.id, // 考试ID\r\n          studentId: userInfo.userId, // 添加用户ID\r\n          title: exam.name,\r\n          duration: exam.duration,\r\n          totalScore: exam.totalScore,\r\n          passScore: exam.passScore\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 处理输入事件\r\n    handleInput() {\r\n      // 清除之前的定时器\r\n      if (this.searchTimer) {\r\n        clearTimeout(this.searchTimer)\r\n      }\r\n      \r\n      // 设置新的定时器，300ms 后执行搜索\r\n      this.searchTimer = setTimeout(() => {\r\n        this.handleSearch()\r\n      }, 300)\r\n    },\r\n\r\n    // 搜索\r\n    handleSearch() {\r\n      // 清除可能存在的定时器\r\n      if (this.searchTimer) {\r\n        clearTimeout(this.searchTimer)\r\n      }\r\n      this.pageNum = 1\r\n      this.fetchExamList()\r\n    },\r\n    \r\n    // 重置搜索\r\n    resetSearch() {\r\n      this.searchKey = ''\r\n      this.dateRange = []\r\n      this.handleSearch()\r\n    },\r\n\r\n    // 处理每页条数变化\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.pageNum = 1\r\n      this.fetchExamList()\r\n    },\r\n\r\n    // 处理页码变化\r\n    handleCurrentChange(val) {\r\n      this.pageNum = val\r\n      this.fetchExamList()\r\n    },\r\n\r\n    // 格式化日期时间\r\n    formatDateTime(date) {\r\n      if (!date) return ''\r\n      const dt = new Date(date)\r\n      const year = dt.getFullYear()\r\n      const month = String(dt.getMonth() + 1).padStart(2, '0')\r\n      const day = String(dt.getDate()).padStart(2, '0')\r\n      const hours = String(dt.getHours()).padStart(2, '0')\r\n      const minutes = String(dt.getMinutes()).padStart(2, '0')\r\n      const seconds = String(dt.getSeconds()).padStart(2, '0')\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n    },\r\n\r\n    // 处理标签页切换\r\n    async handleTabClick() {\r\n      this.pageNum = 1\r\n      this.searchKey = ''\r\n      this.dateRange = []\r\n      await this.fetchExamList()\r\n    },\r\n\r\n    // 查看考试详情\r\n    viewExamDetail(exam) {\r\n      // 使用考试成绩ID跳转到详情页\r\n      this.$router.push({\r\n        path: `/exam/detail/${exam.id}`,\r\n        query: {\r\n          examId: exam.examId,\r\n          name: exam.name,\r\n          score: exam.score,\r\n          totalScore: exam.totalScore,\r\n          passScore: exam.passScore,\r\n          examTime: exam.examTime\r\n        }\r\n      })\r\n    }\r\n  },\r\n  // 组件销毁前清除定时器\r\n  beforeDestroy() {\r\n    if (this.searchTimer) {\r\n      clearTimeout(this.searchTimer)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.exam-container {\r\n  padding: 20px 40px;\r\n  min-height: calc(100vh - 60px);\r\n  background: #f5f7fa;\r\n}\r\n\r\n.search-area {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tabs {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tab-item {\r\n  font-size: 16px;\r\n  margin-right: 30px;\r\n  padding-bottom: 10px;\r\n  cursor: pointer;\r\n  color: #606266;\r\n}\r\n\r\n.tab-item.active {\r\n  color: #409EFF;\r\n  border-bottom: 2px solid #409EFF;\r\n}\r\n\r\n.search-box {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.search-input {\r\n  width: 300px;\r\n}\r\n\r\n.date-picker {\r\n  width: 400px;\r\n}\r\n\r\n.exam-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.exam-item {\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.exam-title {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.exam-info {\r\n  flex: 1;\r\n}\r\n\r\n.info-row {\r\n  margin-bottom: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.label {\r\n  color: #909399;\r\n}\r\n\r\n.status {\r\n  color: #67C23A;\r\n}\r\n\r\n.exam-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #EBEEF5;\r\n}\r\n\r\n.score-info {\r\n  display: flex;\r\n  gap: 20px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n:deep(.el-tag--info) {\r\n  background-color: #f4f4f5;\r\n  border-color: #e9e9eb;\r\n  color: #909399;\r\n}\r\n\r\n:deep(.el-tag--success) {\r\n  background-color: #f0f9eb;\r\n  border-color: #e1f3d8;\r\n  color: #67c23a;\r\n}\r\n\r\n:deep(.el-tag--danger) {\r\n  background-color: #fef0f0;\r\n  border-color: #fde2e2;\r\n  color: #f56c6c;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.el-pagination) {\r\n  text-align: center;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.el-pagination.is-background .el-pager li:not(.disabled).active) {\r\n  background-color: #409EFF;\r\n  color: #fff;\r\n}\r\n\r\n:deep(.el-pagination.is-background .el-pager li:not(.disabled):hover) {\r\n  color: #409EFF;\r\n}\r\n\r\n.search-box {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n\r\n/* 空状态样式 */\r\n:deep(.el-empty) {\r\n  padding: 40px 0;\r\n}\r\n</style> ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1c795a50&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=1c795a50&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1c795a50\",\n  null\n  \n)\n\nexport default component.exports"],"names":["getDictList","params","request","url","method","getImagesByIds","ids","concat","getCourseCategoriesDict","getRepoCategories","getDictDataList","getExamList","getExamDetail","id","getExamPaper","startExam","data","submitPaper","getExamScoreDetail","endComputerInfo","addComputer","render","_vm","this","_c","_self","directives","name","rawName","value","loading","expression","staticClass","examList","length","_l","exam","key","_v","_s","activeTab","startTime","endTime","chances","attrs","statusType","status","score","examTime","passScore","duration","totalScore","openTypeLabel","on","$event","viewExamDetail","pageNum","pageSize","total","handleSizeChange","handleCurrentChange","staticRenderFns","Vue","use","VueRouter","routes","path","component","meta","title","Layout","redirect","children","requireAuth","router","scrollBehavior","y","whiteList","beforeEach","_ref","_asyncToGenerator","_regenerator","m","_callee","to","from","next","token","_to$query","_t","w","_context","p","n","localStorage","getItem","logger","debug","fullPath","hasToken","a","includes","query","v","error","_x","_x2","_x3","apply","arguments","searchKey","dateRange","examStateDict","label","type","openTypeDict","searchTimer","created","getOpenTypeDict","fetchExamList","methods","_this","res","dictType","code","rows","reduce","acc","item","dictValue","dictLabel","isFree","console","_this2","_callee2","_res","_t2","_context2","formatDateTime","map","_item$questionPaperVo","_this2$examStateDict$","_this2$examStateDict$2","_item$questionPaperVo2","openTypeInfo","openType","paperId","questionPaperVo","chance","examState","totalTime","qualifyScore","content","examId","examName","currentScore","submitTime","finishTime","isPass","$message","f","userInfo","JSON","parse","log","userId","$router","push","studentId","handleInput","_this3","clearTimeout","setTimeout","handleSearch","resetSearch","val","date","dt","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","handleTabClick","_this4","_callee3","_context3","beforeDestroy"],"sourceRoot":""}