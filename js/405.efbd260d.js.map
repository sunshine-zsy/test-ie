{"version":3,"file":"js/405.efbd260d.js","mappings":"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","sources":["webpack://pc-exam-student/./src/api/practice.js","webpack://pc-exam-student/./src/views/practice/index.vue","webpack://pc-exam-student/src/views/practice/index.vue","webpack://pc-exam-student/./src/views/practice/index.vue?ed0b","webpack://pc-exam-student/./src/views/practice/index.vue?dcf9"],"sourcesContent":["//import request from './request'\r\nimport request from '@/utils/request'\r\n// 获取公开题库列表\r\nexport function getRepoList(params) {\r\n  return request({\r\n    url: '/system/repos/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取我的题库列表\r\nexport function getMyRepos(params) {\r\n  return request({\r\n    url: '/reposCollections/reposCollections/myRepos',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 收藏题库\r\nexport function collectRepo(id) {\r\n  return request({\r\n    url: `/reposCollections/reposCollections/collect/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 取消收藏题库\r\nexport function cancelCollectRepo(id) {\r\n  return request({\r\n    url: `/reposCollections/reposCollections/cancelCollect/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取题库详情\r\nexport function getRepoInfo(id) {\r\n  return request({\r\n    url: `/practice/repo/info/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取题目列表\r\nexport function getQuestions(id) {\r\n  return request({\r\n    url: `/practice/repo/questions/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 提交答案\r\nexport function submitAnswers(data) {\r\n  return request({\r\n    url: '/practice/repo/submit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取试题列表\r\nexport function getTopicList(params) {\r\n  return request({\r\n    url: '/exam/topic/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 开始练习\r\nexport function startPracticeRecord(data) {\r\n  return request({\r\n    url: '/practice/practiceRecords/start',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取训练题目列表\r\nexport function getPracticeQuestions(recordId) {\r\n  return request({\r\n    url: `/practice/practiceRecords/${recordId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 提交训练题目答案\r\nexport function submitPracticeAnswer(data) {\r\n  return request({\r\n    // url: '/practice/recordsTopic',\r\n    url:'/practice/recordsTopic/puOption',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取题库题型统计\r\nexport function getRepoTopicType(repoId) {\r\n  return request({\r\n    url: `/system/repos/getTopicType/${repoId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取训练记录列表\r\nexport function getPracticeRecordList(params) {\r\n  return request({\r\n    url: '/practice/practiceRecords/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n} ","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"practice-container\"},[(_vm.lastRepo)?_c('div',{staticClass:\"last-practice\"},[_c('span',[_vm._v(\"您上次训练的题库为：【\"+_vm._s(_vm.lastRepo.name)+\"】，进度：\"+_vm._s(_vm.lastRepo.progress || '0/0')+\"，点击此处快速继续训练！\")])]):_vm._e(),_c('div',{staticClass:\"tab-container\"},[_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"公开题库\",\"name\":\"public\"}}),_c('el-tab-pane',{attrs:{\"label\":\"我的题库\",\"name\":\"my\"}}),_c('el-tab-pane',{attrs:{\"label\":\"训练记录\",\"name\":\"record\"}},[_c('div',{staticClass:\"record-list\"},_vm._l((_vm.recordList),function(record){return _c('div',{key:record.id,staticClass:\"record-item\"},[_c('div',{staticClass:\"record-header\"},[_c('span',{staticClass:\"repo-name\"},[_vm._v(_vm._s(record.repoName))]),_c('div',{staticClass:\"progress-circle\",style:({ '--progress': record.exercisePercent + '%' })},[_vm._v(\" \"+_vm._s(record.exercisePercent)+\"% \")])]),_c('div',{staticClass:\"record-info\"},[_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"练习模式：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(_vm.getPracticeModeText(record.practiceMode)))])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"训练进度：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(record.exerciseSchedule || '0/0'))])]),_c('div',{staticClass:\"info-row\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"正确数量：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(record.rightCount)+\"题\")])])]),_c('div',{staticClass:\"record-footer\"},[_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(record.startTime))]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.continuePractice(record)}}},[_vm._v(\"继续训练\")])],1)])}),0),(_vm.total > 0)?_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"current-page\":_vm.pageNum,\"page-sizes\":[12, 24, 36, 48],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1):_vm._e()])],1)],1),(_vm.activeTab !== 'record')?_c('div',{staticClass:\"filter-container\"},[_c('el-select',{staticClass:\"filter-item\",attrs:{\"placeholder\":\"请选择分类\",\"clearable\":\"\"},on:{\"change\":_vm.handleFilter},model:{value:(_vm.categoryId),callback:function ($$v) {_vm.categoryId=$$v},expression:\"categoryId\"}},_vm._l((_vm.categoryOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('el-input',{staticClass:\"filter-item\",attrs:{\"placeholder\":\"搜索题库名称\",\"prefix-icon\":\"el-icon-search\",\"clearable\":\"\"},on:{\"clear\":_vm.handleClear,\"input\":_vm.handleInput},model:{value:(_vm.searchKey),callback:function ($$v) {_vm.searchKey=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"searchKey\"}})],1):_vm._e(),(_vm.activeTab !== 'record')?_c('div',{staticClass:\"repo-grid\"},_vm._l((_vm.repoList),function(repo){return _c('div',{key:repo.id,staticClass:\"repo-item\",on:{\"click\":function($event){return _vm.enterRepo(repo.id)}}},[_c('div',{staticClass:\"repo-title\"},[_vm._v(_vm._s(repo.title || '未命名题库'))]),_c('div',{staticClass:\"repo-info\"},[_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"题库分类：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(_vm.getCategoryName(repo.catId) || '-'))])]),_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"试题数量：\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(repo.trainSize || 0))])])]),_c('div',{staticClass:\"repo-actions\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.startPractice(repo.id)}}},[_vm._v(\" 开始练习 \")]),_c('el-button',{staticClass:\"collect-btn\",attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleCollect(repo)}}},[_c('i',{class:[\n            repo.isCollect === 1 ? 'el-icon-star-on' : 'el-icon-star-off',\n            { 'is-collected': repo.isCollect === 1 }\n          ]})])],1)])}),0):_vm._e(),(_vm.total > 0 && _vm.activeTab !== 'record')?_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"current-page\":_vm.pageNum,\"page-sizes\":[12, 24, 36, 48],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"practice-container\">\r\n    <!-- 上次训练提示 -->\r\n    <div class=\"last-practice\" v-if=\"lastRepo\">\r\n      <span>您上次训练的题库为：【{{ lastRepo.name }}】，进度：{{ lastRepo.progress || '0/0' }}，点击此处快速继续训练！</span>\r\n    </div>\r\n\r\n    <!-- 标签页 -->\r\n    <div class=\"tab-container\">\r\n      <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"公开题库\" name=\"public\"></el-tab-pane>\r\n        <el-tab-pane label=\"我的题库\" name=\"my\"></el-tab-pane>\r\n        <el-tab-pane label=\"训练记录\" name=\"record\">\r\n          <div class=\"record-list\">\r\n            <div class=\"record-item\" v-for=\"record in recordList\" :key=\"record.id\">\r\n              <div class=\"record-header\">\r\n                <span class=\"repo-name\">{{ record.repoName }}</span>\r\n                <div class=\"progress-circle\" :style=\"{ '--progress': record.exercisePercent + '%' }\">\r\n                  {{ record.exercisePercent }}%\r\n                </div>\r\n              </div>\r\n              <div class=\"record-info\">\r\n                <div class=\"info-row\">\r\n                  <span class=\"label\">练习模式：</span>\r\n                  <span class=\"value\">{{ getPracticeModeText(record.practiceMode) }}</span>\r\n                </div>\r\n                <div class=\"info-row\">\r\n                  <span class=\"label\">训练进度：</span>\r\n                  <span class=\"value\">{{ record.exerciseSchedule || '0/0' }}</span>\r\n                </div>\r\n                <div class=\"info-row\">\r\n                  <span class=\"label\">正确数量：</span>\r\n                  <span class=\"value\">{{ record.rightCount }}题</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"record-footer\">\r\n                <span class=\"time\">{{ record.startTime }}</span>\r\n                <el-button type=\"primary\" size=\"small\" @click=\"continuePractice(record)\">继续训练</el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 分页 -->\r\n          <div class=\"pagination-container\" v-if=\"total > 0\">\r\n            <el-pagination\r\n              background\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[12, 24, 36, 48]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </div>\r\n\r\n    <!-- 搜索栏 -->\r\n    <div class=\"filter-container\" v-if=\"activeTab !== 'record'\">\r\n      <el-select \r\n        v-model=\"categoryId\" \r\n        placeholder=\"请选择分类\" \r\n        clearable \r\n        class=\"filter-item\"\r\n        @change=\"handleFilter\">\r\n        <el-option\r\n          v-for=\"item in categoryOptions\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n      <el-input\r\n        v-model.trim=\"searchKey\"\r\n        placeholder=\"搜索题库名称\"\r\n        prefix-icon=\"el-icon-search\"\r\n        clearable\r\n        class=\"filter-item\"\r\n        @clear=\"handleClear\"\r\n        @input=\"handleInput\">\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 题库列表 -->\r\n    <div class=\"repo-grid\" v-if=\"activeTab !== 'record'\">\r\n      <div class=\"repo-item\" v-for=\"repo in repoList\" :key=\"repo.id\" @click=\"enterRepo(repo.id)\">\r\n        <div class=\"repo-title\">{{ repo.title || '未命名题库' }}</div>\r\n        <div class=\"repo-info\">\r\n          <div class=\"info-item\">\r\n            <span class=\"label\">题库分类：</span>\r\n            <span class=\"value\">{{ getCategoryName(repo.catId) || '-' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <span class=\"label\">试题数量：</span>\r\n            <span class=\"value\">{{ repo.trainSize || 0 }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"repo-actions\">\r\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"startPractice(repo.id)\">\r\n            开始练习\r\n          </el-button>\r\n          <el-button \r\n            type=\"text\" \r\n            size=\"small\" \r\n            class=\"collect-btn\"\r\n            @click.stop=\"toggleCollect(repo)\"\r\n          >\r\n            <i :class=\"[\r\n              repo.isCollect === 1 ? 'el-icon-star-on' : 'el-icon-star-off',\r\n              { 'is-collected': repo.isCollect === 1 }\r\n            ]\"></i>\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\" v-if=\"total > 0 && activeTab !== 'record'\">\r\n      <el-pagination\r\n        background\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[12, 24, 36, 48]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getRepoList, getMyRepos, collectRepo, cancelCollectRepo, getPracticeRecordList } from '@/api/practice'\r\nimport { getImagesByIds, getRepoCategories } from '@/api/system'\r\nimport defaultCover from '@/assets/default-cover.jpg'\r\nimport logger from '@/utils/logger'\r\n\r\nexport default {\r\n  name: 'PracticeCenter',\r\n  data() {\r\n    return {\r\n      searchKey: '',\r\n      categoryId: '',\r\n      categoryOptions: [],\r\n      repoList: [],\r\n      loading: false,\r\n      pageNum: 1,\r\n      pageSize: 12,\r\n      total: 0,\r\n      defaultCover,\r\n      imageCache: new Map(),\r\n      searchTimer: null,\r\n      activeTab: 'public',\r\n      lastRepo: null,\r\n      recordList: []\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取分类列表\r\n    async fetchCategories() {\r\n      try {\r\n        const res = await getRepoCategories()\r\n        if (res.code === 200) {\r\n          this.categoryOptions = res.data.map(item => ({\r\n            value: item.dictValue,\r\n            label: item.dictLabel\r\n          }))\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取分类失败:', error)\r\n        this.$message.error('获取分类失败')\r\n      }\r\n    },\r\n\r\n    // 获取题库列表\r\n    async fetchRepoList() {\r\n      this.loading = true\r\n      try {\r\n        const params = {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          title: this.searchKey,\r\n          catId: this.categoryId\r\n        }\r\n\r\n        let res\r\n        if (this.activeTab === 'my') {\r\n          // 获取我的题库列表\r\n          res = await getMyRepos(params)\r\n        } else {\r\n          // 获取公开题库列表\r\n          res = await getRepoList(params)\r\n        }\r\n\r\n        if (res.code === 200) {\r\n          this.repoList = res.rows || []\r\n          this.total = res.total\r\n          logger.log('题库列表:', this.repoList)\r\n\r\n          // 获取所有需要加载的图片ID\r\n          const imageIds = this.repoList\r\n            .filter(repo => repo.imageId)\r\n            .map(repo => repo.imageId)\r\n            .join(',')\r\n\r\n          if (imageIds) {\r\n            await this.loadImages(imageIds)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取题库列表失败:', error)\r\n        this.$message.error('获取题库列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    // 加载图片\r\n    async loadImages(imageIds) {\r\n      try {\r\n        const res = await getImagesByIds(imageIds)\r\n        if (res.code === 200 && res.data) {\r\n          res.data.forEach(item => {\r\n            this.imageCache.set(item.ossId.toString(), item.url)\r\n          })\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取图片失败:', error)\r\n      }\r\n    },\r\n\r\n    // 获取封面URL\r\n    getCoverUrl(repo) {\r\n      if (!repo.imageId) return defaultCover\r\n      return this.imageCache.get(repo.imageId.toString()) || defaultCover\r\n    },\r\n\r\n    // 进入题库\r\n    enterRepo(id) {\r\n      const repo = this.repoList.find(item => item.id === id)\r\n      this.$router.push({\r\n        path: `/practice/detail/${id}`,\r\n        query: { \r\n          repoInfo: JSON.stringify(repo)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 开始练习\r\n    startPractice(id) {\r\n      const repo = this.repoList.find(item => item.id === id)\r\n      this.$router.push({\r\n        path: `/practice/detail/${id}`,\r\n        query: { \r\n          repoInfo: JSON.stringify(repo)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 切换收藏状态\r\n    async toggleCollect(repo) {\r\n      try {\r\n        if (repo.isCollect === 1) {\r\n          // 取消收藏\r\n          const res = await cancelCollectRepo(repo.id)\r\n          if (res.code === 200) {\r\n            repo.isCollect = 0\r\n            this.$message.success('取消收藏成功')\r\n            // 如果在\"我的题库\"页面，刷新列表\r\n            if (this.activeTab === 'my') {\r\n              await this.fetchRepoList()\r\n            }\r\n          }\r\n        } else {\r\n          // 收藏题库\r\n          const res = await collectRepo(repo.id)\r\n          if (res.code === 200) {\r\n            repo.isCollect = 1\r\n            this.$message.success('收藏成功')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        logger.error('操作失败:', error)\r\n        this.$message.error('操作失败')\r\n      }\r\n    },\r\n\r\n    // 搜索相关方法\r\n    handleInput() {\r\n      if (this.searchTimer) {\r\n        clearTimeout(this.searchTimer)\r\n      }\r\n      this.searchTimer = setTimeout(() => {\r\n        this.pageNum = 1\r\n        this.fetchRepoList()\r\n      }, 300)\r\n    },\r\n\r\n    handleClear() {\r\n      this.searchKey = ''\r\n      this.pageNum = 1\r\n      this.fetchRepoList()\r\n    },\r\n\r\n    handleFilter() {\r\n      this.pageNum = 1\r\n      this.fetchRepoList()\r\n    },\r\n\r\n    // 分页方法\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.pageNum = 1\r\n      if (this.activeTab === 'record') {\r\n        this.fetchRecordList()\r\n      } else {\r\n        this.fetchRepoList()\r\n      }\r\n    },\r\n\r\n    handleCurrentChange(val) {\r\n      this.pageNum = val\r\n      if (this.activeTab === 'record') {\r\n        this.fetchRecordList()\r\n      } else {\r\n        this.fetchRepoList()\r\n      }\r\n    },\r\n\r\n    handleTabClick() {\r\n      this.pageNum = 1\r\n      this.pageSize = 12\r\n      this.total = 0\r\n      this.searchKey = ''\r\n      this.categoryId = ''\r\n      \r\n      if (this.activeTab === 'record') {\r\n        this.fetchRecordList()\r\n      } else {\r\n        this.fetchRepoList()\r\n      }\r\n    },\r\n\r\n    // 获取最近训练记录\r\n    async fetchLastPractice() {\r\n      try {\r\n        // TODO: 调用获取最近训练记录的接口\r\n        const res = await getLastPractice()\r\n        if (res.code === 200) {\r\n          this.lastRepo = res.data\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取最近训练记录失败:', error)\r\n      }\r\n    },\r\n\r\n    // 获取分类名称\r\n    getCategoryName(catId) {\r\n      if (!catId) return '-'\r\n      const category = this.categoryOptions.find(item => item.value === catId.toString())\r\n      return category ? category.label : '-'\r\n    },\r\n\r\n    enterPractice(practice) {\r\n      this.$router.push({\r\n        name: 'PracticeDetail',\r\n        params: { id: practice.id }\r\n      })\r\n    },\r\n\r\n    // 获取训练记录列表\r\n    async fetchRecordList() {\r\n      if (this.activeTab !== 'record') return\r\n      \r\n      this.loading = true\r\n      try {\r\n        const res = await getPracticeRecordList({\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize\r\n        })\r\n        \r\n        if (res.code === 200) {\r\n          this.recordList = res.rows || []\r\n          this.total = res.total || 0\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取训练记录失败:', error)\r\n        this.$message.error('获取训练记录失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    // 获取练习模式文本\r\n    getPracticeModeText(mode) {\r\n      const modeMap = {\r\n        '1': '题库练习',\r\n        '2': '题型练习',\r\n        '3': '顺序练习',\r\n        '4': '背题模式',\r\n        '5': '错题练习'\r\n      }\r\n      return modeMap[mode] || '未知模式'\r\n    },\r\n\r\n    // 继续训练\r\n    continuePractice(record) {\r\n      this.$router.push({\r\n        path: `/practice/detail/${record.repoId}`,\r\n        query: { \r\n          repoInfo: JSON.stringify({\r\n            id: record.repoId,\r\n            title: record.repoName\r\n          })\r\n        }\r\n      })\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchCategories()\r\n    await this.fetchLastPractice()\r\n    this.fetchRepoList()\r\n  },\r\n  beforeDestroy() {\r\n    if (this.searchTimer) {\r\n      clearTimeout(this.searchTimer)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.practice-container {\r\n  padding: 20px 40px;\r\n  min-height: calc(100vh - 60px);\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n/* 上次训练提示 */\r\n.last-practice {\r\n  background-color: #fff7e6;\r\n  border: 1px solid #ffe7ba;\r\n  padding: 12px 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  color: #d46b08;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 标签页容器 */\r\n.tab-container {\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n\r\n:deep(.el-tabs__header) {\r\n  margin: 0;\r\n  padding: 0 20px;\r\n}\r\n\r\n:deep(.el-tabs__nav-wrap::after) {\r\n  height: 1px;\r\n}\r\n\r\n:deep(.el-tabs__item) {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  font-size: 15px;\r\n  padding: 0 20px;\r\n}\r\n\r\n/* 筛选区域 */\r\n.filter-container {\r\n  display: flex;\r\n  gap: 15px;\r\n  padding: 15px 20px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n\r\n.filter-item {\r\n  width: 200px;\r\n}\r\n\r\n/* 题库列表 */\r\n.repo-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.repo-item {\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n\r\n.repo-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.repo-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n  margin-bottom: 15px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.repo-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.info-item .label {\r\n  color: #909399;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-item .value {\r\n  color: #606266;\r\n}\r\n\r\n.repo-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.collect-btn {\r\n  padding: 0;\r\n  font-size: 20px;\r\n}\r\n\r\n.collect-btn i {\r\n  transition: all 0.3s;\r\n  color: #909399;\r\n}\r\n\r\n.collect-btn:hover i {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.collect-btn i.is-collected {\r\n  color: #f7ba2a;\r\n}\r\n\r\n.collect-btn i.el-icon-star-on {\r\n  animation: bounce 0.3s;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: scale(1); }\r\n  50% { transform: scale(1.2); }\r\n}\r\n\r\n/* 分页容器 */\r\n.pagination-container {\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n\r\n/* 响应式布局 */\r\n@media screen and (max-width: 1400px) {\r\n  .practice-container {\r\n    padding: 20px 40px;\r\n  }\r\n  .repo-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  .practice-container {\r\n    padding: 20px 40px;\r\n  }\r\n  .repo-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .repo-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.record-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.record-item {\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.record-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.record-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.repo-name {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n  flex: 1;\r\n  margin-right: 15px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.progress-circle {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  color: #409EFF;\r\n  position: relative;\r\n  background: conic-gradient(#409EFF var(--progress), #f5f7fa var(--progress));\r\n}\r\n\r\n.progress-circle::before {\r\n  content: '';\r\n  position: absolute;\r\n  width: 44px;\r\n  height: 44px;\r\n  border-radius: 50%;\r\n  background: white;\r\n}\r\n\r\n.progress-circle span {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.record-info {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.info-row .label {\r\n  color: #909399;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-row .value {\r\n  color: #606266;\r\n}\r\n\r\n.record-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.time {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media screen and (max-width: 1400px) {\r\n  .record-list {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  .record-list {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .record-list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=532ad91c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=532ad91c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"532ad91c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["getRepoList","params","request","url","method","getMyRepos","collectRepo","id","concat","cancelCollectRepo","getRepoInfo","startPracticeRecord","data","getPracticeQuestions","recordId","submitPracticeAnswer","getRepoTopicType","repoId","getPracticeRecordList","render","_vm","this","_c","_self","staticClass","lastRepo","_v","_s","name","progress","_e","on","handleTabClick","model","value","activeTab","callback","$$v","expression","attrs","_l","recordList","record","key","repoName","style","exercisePercent","getPracticeModeText","practiceMode","exerciseSchedule","rightCount","startTime","$event","continuePractice","total","pageNum","pageSize","handleSizeChange","handleCurrentChange","handleFilter","categoryId","categoryOptions","item","label","handleClear","handleInput","searchKey","trim","repoList","repo","enterRepo","title","getCategoryName","catId","trainSize","stopPropagation","startPractice","toggleCollect","class","isCollect","staticRenderFns","loading","defaultCover","imageCache","Map","searchTimer","methods","fetchCategories","_this","_asyncToGenerator","_regenerator","m","_callee","res","_t","w","_context","p","n","getRepoCategories","v","code","map","dictValue","dictLabel","logger","error","$message","a","fetchRepoList","_this2","_callee2","imageIds","_t2","_context2","rows","log","filter","imageId","join","loadImages","f","_this3","_callee3","_t3","_context3","getImagesByIds","forEach","set","ossId","toString","getCoverUrl","get","find","$router","push","path","query","repoInfo","JSON","stringify","_this4","_callee4","_res","_t4","_context4","success","_this5","clearTimeout","setTimeout","val","fetchRecordList","fetchLastPractice","_this6","_callee5","_t5","_context5","getLastPractice","category","enterPractice","practice","_this7","_callee6","_t6","_context6","mode","modeMap","created","_this8","_callee7","_context7","beforeDestroy","component"],"sourceRoot":""}