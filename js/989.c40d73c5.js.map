{"version":3,"file":"js/989.c40d73c5.js","mappings":"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","sources":["webpack://pc-exam-student/./src/views/login/index.vue","webpack://pc-exam-student/./src/api/exam/computer.js","webpack://pc-exam-student/src/views/login/index.vue","webpack://pc-exam-student/./src/views/login/index.vue?ff45","webpack://pc-exam-student/./src/views/login/index.vue?a173"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-container\"},[(_vm.isCardLogin)?_c('el-card',{staticClass:\"login-card\"},[_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.loginType),callback:function ($$v) {_vm.loginType=$$v},expression:\"loginType\"}},[_c('el-card',{staticClass:\"exam-info-card\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.examInfo,\"label-width\":\"100px\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"考生姓名\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.examInfo.username),callback:function ($$v) {_vm.$set(_vm.examInfo, \"username\", $$v)},expression:\"examInfo.username\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"身份证号\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.examInfo.idcard),callback:function ($$v) {_vm.$set(_vm.examInfo, \"idcard\", $$v)},expression:\"examInfo.idcard\"}})],1)],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"考试科目\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.examInfo.subject),callback:function ($$v) {_vm.$set(_vm.examInfo, \"subject\", $$v)},expression:\"examInfo.subject\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"考试时间\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.examInfo.examTime),callback:function ($$v) {_vm.$set(_vm.examInfo, \"examTime\", $$v)},expression:\"examInfo.examTime\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"注意事项\"}},[_c('div',{staticClass:\"remark-html\",domProps:{\"innerHTML\":_vm._s(_vm.examInfo.remark)}})]),_c('el-form-item',{staticStyle:{\"text-align\":\"center\",\"margin-right\":\"15%\"}},[_c('el-button',{staticClass:\"align-center\",attrs:{\"type\":\"primary\",\"disabled\":_vm.examInfo.idcard == ''},on:{\"click\":_vm.startExam}},[_vm._v(\"确认信息进入考试\")])],1)],1)],1)],1)],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from '@/utils/request'\r\n\r\n// 查询考试电脑管理列表\r\nexport function listComputer(query) {\r\n  return request({\r\n    url: '/exam/computer/list',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\n\r\n// 查询考试电脑管理详细\r\nexport function getComputer(id) {\r\n  return request({\r\n    url: '/exam/computer/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 查询考试电脑管理详细\r\nexport function getInfoByFingerId(fingerId) {\r\n    return request({\r\n      url: '/exam/computer/getInfoByFingerId/' + fingerId,\r\n      method: 'get'\r\n    })\r\n  }\r\n\r\n// 新增考试电脑管理\r\nexport function addComputer(data) {\r\n  return request({\r\n    url: '/exam/computer',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 修改考试电脑管理\r\nexport function updateComputer(data) {\r\n  return request({\r\n    url: '/exam/computer',\r\n    method: 'put',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 删除考试电脑管理\r\nexport function delComputer(id) {\r\n  return request({\r\n    url: '/exam/computer/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n","<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\" v-if=\"isCardLogin\">\r\n      <!-- <div class=\"login-title\">在线考试系统</div> -->\r\n      <el-tabs v-model=\"loginType\" @tab-click=\"handleTabClick\">\r\n        <el-card class=\"exam-info-card\">\r\n          <!-- <div slot=\"header\" class=\"clearfix\">\r\n      <span>用户考试信息</span>\r\n    </div> -->\r\n          <el-form ref=\"form\" :model=\"examInfo\" label-width=\"100px\">\r\n            <el-row>\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"考生姓名\">\r\n                  <el-input v-model=\"examInfo.username\" disabled />\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"身份证号\">\r\n                  <el-input v-model=\"examInfo.idcard\" disabled />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <el-row>\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"考试科目\">\r\n                  <el-input v-model=\"examInfo.subject\" disabled />\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"考试时间\">\r\n                  <el-input v-model=\"examInfo.examTime\" disabled />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <el-form-item label=\"注意事项\">\r\n              <div v-html=\"examInfo.remark\" class=\"remark-html\"></div>\r\n              <!-- <el-input\r\n          v-model=\"examInfo.remark\"\r\n          type=\"textarea\"\r\n          :rows=\"3\"\r\n          disabled\r\n        /> -->\r\n            </el-form-item>\r\n            <el-form-item style=\"text-align: center; margin-right: 15%\">\r\n              <el-button\r\n                type=\"primary\"\r\n                :disabled=\"examInfo.idcard == ''\"\r\n                @click=\"startExam\"\r\n                class=\"align-center\"\r\n                >确认信息进入考试</el-button\r\n              >\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-card>\r\n\r\n        <!-- <el-tab-pane label=\"账号密码登录\" name=\"account\"> -->\r\n        <!-- <el-form :model=\"accountForm\" :rules=\"accountRules\" ref=\"accountForm\" class=\"login-form\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input\r\n                v-model=\"accountForm.username\"\r\n                prefix-icon=\"el-icon-user\"\r\n                placeholder=\"请输入用户名\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input\r\n                v-model=\"accountForm.password\"\r\n                prefix-icon=\"el-icon-lock\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n                @keyup.enter.native=\"handleAccountLogin\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"captcha\" class=\"captcha-item\">\r\n              <el-input\r\n                v-model=\"accountForm.captcha\"\r\n                prefix-icon=\"el-icon-picture\"\r\n                placeholder=\"请输入验证码\"\r\n                style=\"width: calc(100% - 120px)\">\r\n              </el-input>\r\n              <img\r\n                :src=\"captchaImg\"\r\n                class=\"captcha-img\"\r\n                @click=\"refreshCaptcha\"\r\n                alt=\"点击刷新验证码\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button\r\n                type=\"primary\"\r\n                :loading=\"loading\"\r\n                class=\"login-button\"\r\n                @click=\"handleAccountLogin\">\r\n                登录\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form> -->\r\n        <!-- </el-tab-pane> -->\r\n\r\n        <!-- 暂时注释验证码登录功能\r\n        <el-tab-pane label=\"验证码登录\" name=\"phone\">\r\n          <el-form :model=\"phoneForm\" :rules=\"phoneRules\" ref=\"phoneForm\" class=\"login-form\">\r\n            <el-form-item prop=\"phone\">\r\n              <el-input\r\n                v-model=\"phoneForm.phone\"\r\n                prefix-icon=\"el-icon-mobile-phone\"\r\n                placeholder=\"请输入手机号\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"code\">\r\n              <el-input\r\n                v-model=\"phoneForm.code\"\r\n                prefix-icon=\"el-icon-message\"\r\n                placeholder=\"请输入验证码\">\r\n                <el-button\r\n                  slot=\"append\"\r\n                  @click=\"sendCode\"\r\n                  :disabled=\"codeBtnDisabled\">\r\n                  {{ codeText }}\r\n                </el-button>\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button\r\n                type=\"primary\"\r\n                :loading=\"loading\"\r\n                class=\"login-button\"\r\n                @click=\"handlePhoneLogin\">\r\n                登录\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n        -->\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCaptcha, login, getInfo, getInfoByToken } from \"@/api/login\";\r\nimport logger from \"@/utils/logger\";\r\nimport FingerprintJS from \"@fingerprintjs/fingerprintjs\";\r\nimport { getInfoByFingerId } from \"@/api/exam/computer\";\r\nimport config from \"@/config\";\r\nexport default {\r\n  name: \"LoginPage\",\r\n  data() {\r\n    // 手机号验证规则\r\n    /* 暂时注释验证码登录相关验证规则\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请输入手机号'))\r\n      } else if (!/^1[3-9]\\d{9}$/.test(value)) {\r\n        callback(new Error('请输入正确的手机号'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    */\r\n\r\n    return {\r\n      isCardLogin: true, //是否使用身份证登录\r\n      examInfo: {\r\n        username: \"\",\r\n        subject: \"\",\r\n        examTime: \"\",\r\n        idcard: \"\",\r\n        remark: \"\",\r\n      },\r\n      fingerprint: \"\", //浏览器指纹ID\r\n      computerInfo: {}, //电脑信息\r\n      loginType: \"account\", // 默认账号密码登录\r\n      loading: false,\r\n      captchaImg: \"\", // 验证码图片地址\r\n      // 账号密码登录表单\r\n      accountForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        captcha: \"\", // 添加验证码字段\r\n        uuid: \"\", // 用于标识验证码\r\n      },\r\n      userAndExamInfo: {}, //用户和考试信息\r\n      socket: null,\r\n      reconnectAttempts: 0, // 重连尝试次数\r\n      maxReconnectAttempts: 5, // 最大重连次数\r\n      reconnectInterval: 5000, // 重连间隔时间\r\n      // 手机验证码登录表单（暂时注释）\r\n      /*\r\n      phoneForm: {\r\n        phone: '',\r\n        code: ''\r\n      },\r\n      // 验证码按钮状态\r\n      codeBtnDisabled: false,\r\n      codeText: '获取验证码',\r\n      timer: null,\r\n      countdown: 60,\r\n      */\r\n      // 账号密码验证规则\r\n      accountRules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 6, message: \"密码长度不能小于6位\", trigger: \"blur\" },\r\n        ],\r\n        captcha: [\r\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\r\n          { min: 1, message: \"验证码长度不能小于1位\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 手机验证码验证规则（暂时注释）\r\n      /*\r\n      phoneRules: {\r\n        phone: [\r\n          { required: true, trigger: 'blur', validator: validatePhone }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n          { len: 6, message: '验证码长度应为6位', trigger: 'blur' }\r\n        ]\r\n      }\r\n      */\r\n    };\r\n  },\r\n  methods: {\r\n    // 开始考试\r\n    startExam() {\r\n      // 跳转到试卷页面，并传递必要参数\r\n      this.$router.push({\r\n        name: \"ExamPaper\",\r\n        params: {\r\n          id: this.userAndExamInfo.exam.paperId, // paperId作为路由参数\r\n        },\r\n        query: {\r\n          examId: this.userAndExamInfo.exam.id, // 考试ID\r\n          studentId: this.userAndExamInfo.user.userId, // 添加用户ID\r\n          title: this.userAndExamInfo.exam.name,\r\n          // duration: this.userAndExamInfo.exam.duration,\r\n          // totalScore: this.userAndExamInfo.exam.totalScore,\r\n          // passScore: this.userAndExamInfo.exam.passScore\r\n        },\r\n      });\r\n    },\r\n    // 获取浏览器指纹\r\n    getBrowserFingerprint() {\r\n      FingerprintJS.load().then((fp) => {\r\n        fp.get().then((result) => {\r\n          console.log(\"浏览器指纹ID\"); // 这是浏览器指纹\r\n          console.log(result.visitorId); // 这是浏览器指纹\r\n          localStorage.setItem(\"fingerprint\", result.visitorId);\r\n          this.fingerprint = result.visitorId;\r\n          this.initWebSocket();\r\n          // 获取考试电脑指纹编号\r\n          getInfoByFingerId(result.visitorId).then((response) => {\r\n            this.computerInfo = response.data;\r\n          });\r\n        });\r\n      });\r\n    },\r\n    // 初始化 WebSocket 连接\r\n    initWebSocket() {\r\n      if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n        this.$message.error(\"WebSocket 连接失败，达到最大重试次数\");\r\n        return;\r\n      }\r\n      console.log(\"初始化 WebSocket 链接\");\r\n      // 从自定义配置文件获取 WebSocketURL\r\n      const WebSocketURL = config.WebSocketURL;\r\n      console.log(WebSocketURL, \"aaa\");\r\n      if (!WebSocketURL) {\r\n        console.error(\"未配置 WebSocketURL\");\r\n        this.$message.error(\"未配置 WebSocketURL\");\r\n        return;\r\n      }\r\n      this.socket = new WebSocket(WebSocketURL + this.fingerprint);\r\n\r\n      this.socket.addEventListener(\"open\", () => {\r\n        this.reconnectAttempts = 0; // 连接成功，重置重连次数\r\n        this.registerFingerprint();\r\n      });\r\n\r\n      this.socket.addEventListener(\"message\", (event) => {\r\n        console.log(\"WebSocket消息：\");\r\n        console.log(event.data);\r\n\r\n        if (event.data != \"\" || event.data != null) {\r\n          const data = JSON.parse(event.data);\r\n          this.userAndExamInfo = data;\r\n          localStorage.setItem(this.fingerprint, data);\r\n\r\n          try {\r\n            // 保存token\r\n            localStorage.setItem(\"token\", data.token);\r\n            this.getUserProfile(data.token);\r\n          } catch (error) {\r\n            console.error(\"获取用户信息失败:\", error);\r\n          }\r\n\r\n          // // 保存用户信息\r\n          // localStorage.setItem('userInfo', data.user)\r\n\r\n          this.examInfo.username = data.user.nickName;\r\n          this.examInfo.subject = data.exam.title;\r\n          this.examInfo.examTime = data.exam.startTime;\r\n          this.examInfo.idcard = data.user.idCard;\r\n          this.examInfo.remark = data.exam.content;\r\n\r\n          // this.$message.success('登录成功')\r\n\r\n          // // 获取重定向地址\r\n          // const redirect = this.$route.query.redirect || '/course'\r\n          // this.$router.push(redirect)\r\n        }\r\n      });\r\n\r\n      this.socket.addEventListener(\"close\", () => {\r\n        this.reconnectAttempts++;\r\n        if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n          this.$message.warning(\r\n            `WebSocket 连接关闭，${this.reconnectInterval / 1000} 秒后尝试第 ${\r\n              this.reconnectAttempts + 1\r\n            } 次重连`\r\n          );\r\n          setTimeout(() => {\r\n            this.initWebSocket();\r\n            console.log(\"WebSocket 连接关闭，已达最大重连次数\");\r\n          }, this.reconnectInterval);\r\n        } else {\r\n          this.$message.error(\"WebSocket 连接失败，达到最大重试次数\");\r\n        }\r\n      });\r\n\r\n      this.socket.addEventListener(\"error\", (error) => {\r\n        console.error(\"WebSocket 连接出错:\", error);\r\n      });\r\n    },\r\n    async getUserProfile(token) {\r\n      console.info(\"获取用户信息---------------------\");\r\n      console.info(token);\r\n      // 获取用户信息\r\n      const userRes = await getInfoByToken(token);\r\n      console.info(\"获取用户信息成功\");\r\n      console.info(userRes);\r\n      // 保存用户信息\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(userRes.data));\r\n    },\r\n    // 设置考试信息\r\n    setExamData() {},\r\n    // 向后台注册指纹\r\n    registerFingerprint() {\r\n      if (this.socket.readyState === WebSocket.OPEN) {\r\n        // 发送指纹信息到服务器\r\n        this.socket.send(\r\n          JSON.stringify({\r\n            type: \"online\",\r\n            fingerprint: this.fingerprint,\r\n          })\r\n        );\r\n      }\r\n    },\r\n    // 发送消息\r\n    // 获取验证码\r\n    async getCaptcha() {\r\n      try {\r\n        const res = await getCaptcha();\r\n        if (res && res.data && res.data.img && res.data.uuid) {\r\n          this.captchaImg = `data:image/gif;base64,${res.data.img}`;\r\n          this.accountForm.uuid = res.data.uuid;\r\n        } else {\r\n          this.$message.error(\"获取验证码失败\");\r\n          logger.error(\"验证码数据异常:\", res);\r\n        }\r\n      } catch (error) {\r\n        logger.error(\"获取验证码失败:\", error);\r\n        this.$message.error(error.message || \"获取验证码失败\");\r\n      }\r\n    },\r\n    // 刷新验证码\r\n    refreshCaptcha() {\r\n      this.accountForm.captcha = \"\";\r\n      this.getCaptcha();\r\n    },\r\n    // 切换登录方式\r\n    handleTabClick() {\r\n      this.loading = false;\r\n      if (this.loginType === \"account\") {\r\n        this.$refs.accountForm?.resetFields();\r\n        this.refreshCaptcha();\r\n      }\r\n      /* 暂时注释验证码登录相关方法\r\n      else {\r\n        this.$refs.phoneForm?.resetFields()\r\n      }\r\n      */\r\n    },\r\n    // 账号密码登录\r\n    async handleAccountLogin() {\r\n      this.$refs.accountForm.validate(async (valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          try {\r\n            // 登录\r\n            const loginRes = await login({\r\n              username: this.accountForm.username,\r\n              password: this.accountForm.password,\r\n              code: this.accountForm.captcha,\r\n              uuid: this.accountForm.uuid,\r\n            });\r\n\r\n            // 保存token\r\n            localStorage.setItem(\"token\", loginRes.data.token);\r\n\r\n            // 获取用户信息\r\n            const userRes = await getInfo();\r\n\r\n            // 保存用户信息\r\n            localStorage.setItem(\"userInfo\", JSON.stringify(userRes.data));\r\n\r\n            this.$message.success(\"登录成功\");\r\n\r\n            // 获取重定向地址\r\n            const redirect = this.$route.query.redirect || \"/course\";\r\n            this.$router.push(redirect);\r\n          } catch (error) {\r\n            // 登录失败刷新验证码\r\n            this.refreshCaptcha();\r\n          } finally {\r\n            this.loading = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /* 暂时注释验证码登录相关方法\r\n    // 手机验证码登录\r\n    handlePhoneLogin() {\r\n      this.$refs.phoneForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          setTimeout(() => {\r\n            localStorage.setItem('token', 'demo-token')\r\n            localStorage.setItem('userInfo', JSON.stringify({\r\n              name: '张三',\r\n              studentId: '2024001'\r\n            }))\r\n            this.loading = false\r\n            this.$message.success('登录成功')\r\n            this.$router.push('/course')\r\n          }, 1000)\r\n        }\r\n      })\r\n    },\r\n    // 发送验证码\r\n    sendCode() {\r\n      this.$refs.phoneForm.validateField('phone', (errorMessage) => {\r\n        if (!errorMessage) {\r\n          this.codeBtnDisabled = true\r\n          this.countdown = 60\r\n          this.timer = setInterval(() => {\r\n            if (this.countdown > 0) {\r\n              this.countdown--\r\n              this.codeText = `${this.countdown}秒后重试`\r\n            } else {\r\n              clearInterval(this.timer)\r\n              this.codeBtnDisabled = false\r\n              this.codeText = '获取验证码'\r\n            }\r\n          }, 1000)\r\n\r\n          // 这里模拟发送验证码\r\n          this.$message.success('验证码已发送，请注意查收')\r\n        }\r\n      })\r\n    }\r\n    */\r\n  },\r\n  created() {\r\n    // 组件创建时获取验证码\r\n    //this.getCaptcha()\r\n    // 获取浏览器指纹\r\n    this.getBrowserFingerprint();\r\n  },\r\n  /* 暂时注释验证码登录相关生命周期钩子\r\n  beforeDestroy() {\r\n    // 组件销毁前清除定时器\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n  }\r\n  */\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.exam-info-card {\r\n  width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.el-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-card .el-card__header {\r\n  background-color: #f5f7fa;\r\n  padding: 15px;\r\n}\r\n\r\n.el-card .el-card__body {\r\n  padding: 20px;\r\n}\r\n\r\n/* ################################# */\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: url(\"~@/assets/bg.jpg\") no-repeat center center;\r\n  background-size: 100% 100%;\r\n}\r\n\r\n.login-card {\r\n  /* width: 400px;\r\n  width: 70%;\r\n  padding: 30px;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); */\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409eff;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n/* 自定义 tab 样式 */\r\n:deep(.el-tabs__nav) {\r\n  width: 100%;\r\n  display: flex;\r\n}\r\n\r\n:deep(.el-tabs__item) {\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n.captcha-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 22px;\r\n}\r\n\r\n.captcha-item :deep(.el-form-item__content) {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.captcha-img {\r\n  height: 40px;\r\n  width: 110px;\r\n  margin-left: 10px;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n}\r\n\r\n.remark-html {\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  padding: 8px;\r\n  min-height: 72px; /* 约等于 3 行 textarea 的高度 */\r\n  line-height: 1.5;\r\n  overflow-y: auto;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n/* 输入框样式优化 */\r\n:deep(.el-input__inner) {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n\r\n:deep(.el-form-item) {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n:deep(.el-button) {\r\n  height: 40px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 移除最后一个表单项的下边距 */\r\n:deep(.el-form-item:last-child) {\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=39338a8c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=39338a8c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39338a8c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","isCardLogin","on","handleTabClick","model","value","loginType","callback","$$v","expression","ref","attrs","examInfo","username","$set","idcard","subject","examTime","domProps","_s","remark","staticStyle","startExam","_v","_e","staticRenderFns","getInfoByFingerId","fingerId","request","url","method","name","data","fingerprint","computerInfo","loading","captchaImg","accountForm","password","captcha","uuid","userAndExamInfo","socket","reconnectAttempts","maxReconnectAttempts","reconnectInterval","accountRules","required","message","trigger","min","methods","$router","push","params","id","exam","paperId","query","examId","studentId","user","userId","title","getBrowserFingerprint","_this","FingerprintJS","then","fp","get","result","console","log","visitorId","localStorage","setItem","initWebSocket","response","_this2","$message","error","WebSocketURL","config","WebSocket","addEventListener","registerFingerprint","event","JSON","parse","token","getUserProfile","nickName","startTime","idCard","content","warning","concat","setTimeout","_asyncToGenerator","_regenerator","m","_callee","userRes","w","_context","n","info","getInfoByToken","v","stringify","a","setExamData","readyState","OPEN","send","type","getCaptcha","_this3","_callee2","res","_t","_context2","p","img","logger","refreshCaptcha","_this$$refs$accountFo","$refs","resetFields","handleAccountLogin","_this4","_callee4","_context4","validate","_ref","_callee3","valid","loginRes","redirect","_context3","login","code","getInfo","success","$route","f","_x","apply","arguments","created","component"],"sourceRoot":""}