{"version":3,"file":"js/951-legacy.fe3b131a.js","mappings":"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","sources":["webpack://pc-exam-student/./src/views/exam/paper.vue","webpack://pc-exam-student/src/views/exam/paper.vue","webpack://pc-exam-student/./src/views/exam/paper.vue?6ed0","webpack://pc-exam-student/./src/views/exam/paper.vue?c0c1"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"exam-paper\"},[_c('div',{staticClass:\"answer-card-sidebar\"},[_c('div',{staticClass:\"answer-card\"},[_vm._l((_vm.questionGroups),function(group,index){return _c('div',{key:index,staticClass:\"question-type-section\"},[_c('div',{staticClass:\"type-header\"},[_vm._v(\" \"+_vm._s(group.typeName)+\"（总\"+_vm._s(group.questions.length)+\"题/共\"+_vm._s(group.totalScore)+\"分） \")]),_c('div',{staticClass:\"question-grid\"},_vm._l((group.questions),function(question,qIndex){return _c('div',{key:question.id,staticClass:\"question-number\",class:{\n              'answered': question.answered,\n              'current': _vm.currentQuestion === question,\n              'flagged': question.isFlag\n            },on:{\"click\":function($event){return _vm.switchToQuestion(question)}}},[_vm._v(\" \"+_vm._s(qIndex + 1)+\" \")])}),0)])}),_c('div',{staticClass:\"answer-stats\"},[_c('div',{staticClass:\"stats-item\"},[_c('span',{staticClass:\"stats-label\"},[_vm._v(\"已答题数：\")]),_c('span',{staticClass:\"stats-value\"},[_vm._v(_vm._s(_vm.answeredCount))])]),_c('div',{staticClass:\"stats-item\"},[_c('span',{staticClass:\"stats-label\"},[_vm._v(\"未答题数：\")]),_c('span',{staticClass:\"stats-value\"},[_vm._v(_vm._s(_vm.questions.length - _vm.answeredCount))])]),_c('div',{staticClass:\"stats-item\"},[_c('span',{staticClass:\"stats-label\"},[_vm._v(\"标记题数：\")]),_c('span',{staticClass:\"stats-value\"},[_vm._v(_vm._s(_vm.flaggedCount))])])])],2)]),_c('div',{staticClass:\"main-content\"},[_c('div',{staticClass:\"paper-content\"},_vm._l((_vm.questionGroups),function(group,index){return _c('div',{key:index,staticClass:\"question-section\"},[_c('div',{staticClass:\"section-title\"},[_vm._v(\" 第\"+_vm._s(index + 1)+\"大题，\"+_vm._s(group.typeName)+\"（共\"+_vm._s(group.questions.length)+\"题，每题\"+_vm._s(group.score)+\"分，合计\"+_vm._s(group.totalScore)+\"分） \")]),_vm._l((group.questions),function(question,qIndex){return _c('div',{key:question.id,staticClass:\"question-item\",attrs:{\"id\":`question-${question.id}`}},[_c('div',{staticClass:\"question-header\"},[_c('span',{staticClass:\"question-index\"},[_vm._v(_vm._s(qIndex + 1)+\".\")]),_c('span',{staticClass:\"question-type\"},[_vm._v(\"【\"+_vm._s(group.typeName)+\"】\")]),_c('span',{staticClass:\"question-score\"},[_vm._v(_vm._s(question.score)+\"分\")]),_c('span',{staticClass:\"flag-btn\",on:{\"click\":function($event){return _vm.toggleFlag(question)}}},[_c('i',{staticClass:\"el-icon-warning-outline\",class:{ active: question.isFlag }}),_vm._v(\" 疑难标记 \")])]),_c('div',{staticClass:\"question-content\",domProps:{\"innerHTML\":_vm._s(question.content)}}),([1, 2].includes(question.type))?_c('div',{staticClass:\"options\"},[(question.type === 1)?_c('el-radio-group',{on:{\"change\":function($event){return _vm.handleAnswer(question)}},model:{value:(question.answer),callback:function ($$v) {_vm.$set(question, \"answer\", $$v)},expression:\"question.answer\"}},_vm._l((question.options),function(option){return _c('el-radio',{key:option.code,staticClass:\"option-item\",attrs:{\"label\":option.code,\"role\":\"radio\",\"aria-checked\":question.answer === option.code}},[_c('div',{staticClass:\"option-content\",domProps:{\"innerHTML\":_vm._s(`${option.content}`)}})])}),1):_c('el-checkbox-group',{on:{\"change\":function($event){return _vm.handleAnswer(question)}},model:{value:(question.answer),callback:function ($$v) {_vm.$set(question, \"answer\", $$v)},expression:\"question.answer\"}},_vm._l((question.options),function(option){return _c('el-checkbox',{key:option.code,staticClass:\"option-item\",attrs:{\"label\":option.code,\"role\":\"checkbox\",\"aria-checked\":question.answer.includes(option.code)}},[_c('div',{staticClass:\"option-content\",domProps:{\"innerHTML\":_vm._s(`${option.content}`)}})])}),1)],1):(question.type === 3)?_c('div',{staticClass:\"options\"},[_c('el-radio-group',{on:{\"change\":function($event){return _vm.handleAnswer(question)}},model:{value:(question.answer),callback:function ($$v) {_vm.$set(question, \"answer\", $$v)},expression:\"question.answer\"}},_vm._l((question.options),function(option){return _c('el-radio',{key:option.id,staticClass:\"option-item\",attrs:{\"label\":option.id,\"role\":\"radio\",\"aria-checked\":question.answer === option.id}},[_vm._v(\" \"+_vm._s(option.content)+\" \")])}),1)],1):_vm._e()])})],2)}),0),_c('div',{staticClass:\"nav-sidebar\"},[_c('div',{staticClass:\"nav-content\"},[_c('div',{staticClass:\"time-info\"},[_c('div',{staticClass:\"time-label\"},[_vm._v(\"剩余时间\")]),_c('div',{staticClass:\"time-value\"},[_vm._v(_vm._s(_vm.formatTime(_vm.remainingTime)))])]),_c('el-button',{staticClass:\"submit-btn\",attrs:{\"type\":\"warning\"},on:{\"click\":_vm.confirmSubmit}},[_vm._v(\"提交试卷\")]),_c('div',{staticClass:\"nav-buttons\"},[_c('el-button',{attrs:{\"plain\":\"\"},on:{\"click\":_vm.prevQuestion}},[_c('i',{staticClass:\"el-icon-arrow-left\"}),_vm._v(\" 上一题 \")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.nextQuestion}},[_vm._v(\" 下一题 \"),_c('i',{staticClass:\"el-icon-arrow-right\"})])],1)],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"exam-paper\">\r\n    <!-- 左侧答题卡 -->\r\n    <div class=\"answer-card-sidebar\">\r\n      <div class=\"answer-card\">\r\n        <!-- 题型列表 -->\r\n        <div v-for=\"(group, index) in questionGroups\" :key=\"index\" class=\"question-type-section\">\r\n          <div class=\"type-header\">\r\n            {{ group.typeName }}（总{{ group.questions.length }}题/共{{ group.totalScore }}分）\r\n          </div>\r\n          <div class=\"question-grid\">\r\n            <div\r\n              v-for=\"(question, qIndex) in group.questions\"\r\n              :key=\"question.id\"\r\n              class=\"question-number\"\r\n              :class=\"{\r\n                'answered': question.answered,\r\n                'current': currentQuestion === question,\r\n                'flagged': question.isFlag\r\n              }\"\r\n              @click=\"switchToQuestion(question)\"\r\n            >\r\n              {{ qIndex + 1 }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 答题统计 -->\r\n        <div class=\"answer-stats\">\r\n          <div class=\"stats-item\">\r\n            <span class=\"stats-label\">已答题数：</span>\r\n            <span class=\"stats-value\">{{ answeredCount }}</span>\r\n          </div>\r\n          <div class=\"stats-item\">\r\n            <span class=\"stats-label\">未答题数：</span>\r\n            <span class=\"stats-value\">{{ questions.length - answeredCount }}</span>\r\n          </div>\r\n          <div class=\"stats-item\">\r\n            <span class=\"stats-label\">标记题数：</span>\r\n            <span class=\"stats-value\">{{ flaggedCount }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧内容区 -->\r\n    <div class=\"main-content\">\r\n      <!-- 题目内容区域 -->\r\n      <div class=\"paper-content\">\r\n        <!-- 题型分组 -->\r\n        <div v-for=\"(group, index) in questionGroups\" :key=\"index\" class=\"question-section\">\r\n          <div class=\"section-title\">\r\n            第{{ index + 1 }}大题，{{ group.typeName }}（共{{ group.questions.length }}题，每题{{ group.score }}分，合计{{ group.totalScore }}分）\r\n          </div>\r\n\r\n          <!-- 题目列表 -->\r\n          <div v-for=\"(question, qIndex) in group.questions\" :key=\"question.id\" :id=\"`question-${question.id}`\" class=\"question-item\">\r\n            <div class=\"question-header\">\r\n              <span class=\"question-index\">{{ qIndex + 1 }}.</span>\r\n              <span class=\"question-type\">【{{ group.typeName }}】</span>\r\n              <span class=\"question-score\">{{ question.score }}分</span>\r\n              <span class=\"flag-btn\" @click=\"toggleFlag(question)\">\r\n                <i class=\"el-icon-warning-outline\" :class=\"{ active: question.isFlag }\"></i>\r\n                疑难标记\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"question-content\" v-html=\"question.content\"></div>\r\n\r\n            <!-- 选择题选项 -->\r\n            <div v-if=\"[1, 2].includes(question.type)\" class=\"options\">\r\n              <el-radio-group \r\n                v-if=\"question.type === 1\"\r\n                v-model=\"question.answer\"\r\n                @change=\"handleAnswer(question)\"\r\n              >\r\n                <el-radio \r\n                  v-for=\"option in question.options\" \r\n                  :key=\"option.code\"\r\n                  :label=\"option.code\"\r\n                  class=\"option-item\"\r\n                  role=\"radio\"\r\n                  :aria-checked=\"question.answer === option.code\"\r\n                >\r\n                  <div class=\"option-content\" v-html=\"`${option.content}`\"></div>\r\n                </el-radio>\r\n              </el-radio-group>\r\n\r\n              <el-checkbox-group\r\n                v-else\r\n                v-model=\"question.answer\"\r\n                @change=\"handleAnswer(question)\"\r\n              >\r\n                <el-checkbox\r\n                  v-for=\"option in question.options\"\r\n                  :key=\"option.code\"\r\n                  :label=\"option.code\"\r\n                  class=\"option-item\"\r\n                  role=\"checkbox\"\r\n                  :aria-checked=\"question.answer.includes(option.code)\"\r\n                >\r\n                  <div class=\"option-content\" v-html=\"`${option.content}`\"></div>\r\n                </el-checkbox>\r\n              </el-checkbox-group>\r\n            </div>\r\n\r\n            <!-- 判断题选项 -->\r\n            <div v-else-if=\"question.type === 3\" class=\"options\">\r\n              <el-radio-group \r\n                v-model=\"question.answer\"\r\n                @change=\"handleAnswer(question)\"\r\n              >\r\n                <el-radio \r\n                  v-for=\"option in question.options\"\r\n                  :key=\"option.id\"\r\n                  :label=\"option.id\"\r\n                  class=\"option-item\"\r\n                  role=\"radio\"\r\n                  :aria-checked=\"question.answer === option.id\"\r\n                >\r\n                  {{ option.content }}\r\n                </el-radio>\r\n              </el-radio-group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧固定导航栏 -->\r\n      <div class=\"nav-sidebar\">\r\n        <div class=\"nav-content\">\r\n          <div class=\"time-info\">\r\n            <div class=\"time-label\">剩余时间</div>\r\n            <div class=\"time-value\">{{ formatTime(remainingTime) }}</div>\r\n          </div>\r\n          \r\n          <el-button type=\"warning\" class=\"submit-btn\" @click=\"confirmSubmit\">提交试卷</el-button>\r\n          \r\n          <div class=\"nav-buttons\">\r\n            <el-button plain @click=\"prevQuestion\">\r\n              <i class=\"el-icon-arrow-left\"></i>\r\n              上一题\r\n            </el-button>\r\n            <el-button type=\"primary\" @click=\"nextQuestion\">\r\n              下一题\r\n              <i class=\"el-icon-arrow-right\"></i>\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getExamPaper, startExam, submitPaper, endComputerInfo } from '@/api/exam'\r\nimport { getDictDataList } from '@/api/system'\r\nimport logger from '@/utils/logger'\r\nexport default {\r\n  name: 'ExamPaper',\r\n  data() {\r\n    return {\r\n      examInfo: {\r\n        title: '',\r\n        duration: 0,\r\n        totalScore: 0,\r\n        passScore: 0\r\n      },\r\n      questions: [],\r\n      currentIndex: 0,\r\n      remainingTime: 0,\r\n      timer: null,\r\n      submitDialogVisible: false,\r\n      questionTypes: {},\r\n      questionGroups: [],\r\n      answerCardVisible: false,\r\n      examId: '',\r\n      paperId: '',\r\n      studentId: '',\r\n    }\r\n  },\r\n  computed: {\r\n    currentQuestion() {\r\n      return this.questions[this.currentIndex]\r\n    },\r\n    answeredCount() {\r\n      return this.questions.filter(q => q.answered).length\r\n    },\r\n    flaggedCount() {\r\n      return this.questions.filter(q => q.isFlag).length\r\n    }\r\n  },\r\n  async created() {\r\n    await this.getQuestionTypes()\r\n    this.initExamInfo()\r\n    await this.startExam()\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n  },\r\n  methods: {\r\n    async getQuestionTypes() {\r\n      try {\r\n        const res = await getDictDataList({\r\n          pageNum: 1,\r\n          pageSize: 10,\r\n          dictType: 'question_types'\r\n        })\r\n        \r\n        if (res.code === 200) {\r\n          this.questionTypes = (res.rows || []).reduce((acc, item) => {\r\n            acc[item.dictValue] = {\r\n              name: item.dictLabel,\r\n              score: 20\r\n            }\r\n            return acc\r\n          }, {})\r\n          \r\n          logger.log('题型数据:', this.questionTypes)\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取题型列表失败:', error)\r\n        this.$message.error('获取题型列表失败')\r\n      }\r\n    },\r\n    initExamInfo() {\r\n      const query = this.$route.query\r\n      this.examInfo = {\r\n        title: query.title || '',\r\n        duration: parseInt(query.duration) || 0,\r\n        totalScore: parseInt(query.totalScore) || 0,\r\n        passScore: parseInt(query.passScore) || 0\r\n      }\r\n      this.remainingTime = this.examInfo.duration * 60\r\n      this.startTimer()\r\n    },\r\n    async getExamPaper() {\r\n      try {\r\n        const res = await getExamPaper(this.$route.params.id)\r\n        if (res.code === 200) {\r\n          // 处理试题数据\r\n          this.questions = (res.data.questionPapgerTopicList || []).map(q => {\r\n            const topic = q.questionsTopic || {}\r\n            const isMultiple = parseInt(topic.topicType) === 2\r\n            return {\r\n              id: topic.id,\r\n              type: parseInt(topic.topicType),\r\n              title: topic.content,\r\n              content: topic.content,\r\n              score: q.score || 0,\r\n              options: this.formatOptions(topic.questionOptionsList),\r\n              answer: isMultiple ? [] : '',\r\n              answered: false,\r\n              isFlag: false,\r\n              analysis: topic.analysis,\r\n              questionsTopic: topic\r\n            }\r\n          })\r\n\r\n          // 按题型分组\r\n          this.groupQuestions()\r\n        }\r\n      } catch (error) {\r\n        logger.error('获取试卷失败:', error)\r\n        this.$message.error('获取试卷失败')\r\n      }\r\n    },\r\n    startTimer() {\r\n      this.timer = setInterval(() => {\r\n        if (this.remainingTime > 0) {\r\n          this.remainingTime--\r\n        } else {\r\n          clearInterval(this.timer)\r\n          this.$message.warning('考试时间已到，系统将自动交卷')\r\n          this.confirmSubmit()\r\n        }\r\n      }, 1000)\r\n    },\r\n    formatTime(seconds) {\r\n      const hours = Math.floor(seconds / 3600)\r\n      const minutes = Math.floor((seconds % 3600) / 60)\r\n      const secs = seconds % 60\r\n      return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\r\n    },\r\n    getQuestionType(type) {\r\n      return this.questionTypes[type]?.name || '未知题型'\r\n    },\r\n    handleAnswer(question) {\r\n      if (question) {\r\n        question.answered = true\r\n        this.updateAnswerCardStatus()\r\n      }\r\n    },\r\n    updateAnswerCardStatus() {\r\n      this.questions.forEach(question => {\r\n        if (Array.isArray(question.answer)) {\r\n          question.answered = question.answer.length > 0\r\n        } else {\r\n          question.answered = question.answer !== ''\r\n        }\r\n      })\r\n    },\r\n    switchQuestion(index) {\r\n      this.currentIndex = index\r\n    },\r\n    // 获取所有题目的展平数组\r\n    getFlatQuestions() {\r\n      return this.questionGroups.reduce((acc, group) => {\r\n        return acc.concat(group.questions)\r\n      }, [])\r\n    },\r\n\r\n    // 获取当前题目在展平数组中的索引\r\n    getCurrentFlatIndex() {\r\n      const flatQuestions = this.getFlatQuestions()\r\n      return flatQuestions.findIndex(q => q.id === this.currentQuestion.id)\r\n    },\r\n\r\n    // 上一题\r\n    prevQuestion() {\r\n      const flatQuestions = this.getFlatQuestions()\r\n      const currentIndex = this.getCurrentFlatIndex()\r\n      \r\n      if (currentIndex > 0) {\r\n        const prevQuestion = flatQuestions[currentIndex - 1]\r\n        this.currentIndex = this.questions.findIndex(q => q.id === prevQuestion.id)\r\n        this.scrollToCurrentQuestion()\r\n      }\r\n    },\r\n\r\n    // 下一题\r\n    nextQuestion() {\r\n      const flatQuestions = this.getFlatQuestions()\r\n      const currentIndex = this.getCurrentFlatIndex()\r\n      \r\n      if (currentIndex < flatQuestions.length - 1) {\r\n        const nextQuestion = flatQuestions[currentIndex + 1]\r\n        this.currentIndex = this.questions.findIndex(q => q.id === nextQuestion.id)\r\n        this.scrollToCurrentQuestion()\r\n      }\r\n    },\r\n\r\n    // 滚动到当前题目\r\n    scrollToCurrentQuestion() {\r\n      this.$nextTick(() => {\r\n        const currentQuestion = this.questions[this.currentIndex]\r\n        if (currentQuestion) {\r\n          const questionEl = document.querySelector(`#question-${currentQuestion.id}`)\r\n          if (questionEl) {\r\n            questionEl.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async confirmSubmit() {\r\n      try {\r\n        // 获取未答题目\r\n        const unansweredQuestions = this.questions.filter(q => !q.answered)\r\n        const unansweredCount = unansweredQuestions.length\r\n        \r\n        // 如果有未答题目，显示详细信息\r\n        if (unansweredCount > 0) {\r\n          // 按题型分组未答题目\r\n          const unansweredByType = {}\r\n          unansweredQuestions.forEach(q => {\r\n            const type = this.getQuestionType(q.type)\r\n            if (!unansweredByType[type]) {\r\n              unansweredByType[type] = []\r\n            }\r\n            unansweredByType[type].push(q)\r\n          })\r\n\r\n          // 构建提示信息\r\n          let message = `还有 ${unansweredCount} 道题未作答：\\n\\n`\r\n          Object.entries(unansweredByType).forEach(([type, questions]) => {\r\n            message += `${type}：${questions.length} 题\\n`\r\n          })\r\n          message += '\\n确认提交试卷吗？'\r\n\r\n          try {\r\n            await this.$confirm(message, '提交确认', {\r\n              confirmButtonText: '确认提交',\r\n              cancelButtonText: '继续答题',\r\n              type: 'warning',\r\n              dangerouslyUseHTMLString: true\r\n            })\r\n            // 用户确认提交\r\n            await this.submitAnswers()\r\n          } catch (err) {\r\n            // 用户选择继续答题\r\n            // 跳转到第一道未答题\r\n            if (unansweredQuestions.length > 0) {\r\n              this.switchToQuestion(unansweredQuestions[0])\r\n            }\r\n          }\r\n        } else {\r\n          // 全部题目已答，二次确认\r\n          try {\r\n            await this.$confirm('已完成所有题目，确认提交试卷吗？', '提交确认', {\r\n              confirmButtonText: '确认提交',\r\n              cancelButtonText: '再检查一下',\r\n              type: 'info'\r\n            })\r\n            await this.submitAnswers()\r\n          } catch (err) {\r\n            // 用户取消提交\r\n            logger.debug('用户取消提交')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        logger.error('提交试卷出错:', error)\r\n        this.$message.error('提交试卷失败')\r\n      }\r\n    },\r\n    async submitAnswers() {\r\n      try {\r\n        // 格式化答案数据\r\n        const topicList = this.questions.map(q => {\r\n          let answer = ''\r\n          if (Array.isArray(q.answer)) {\r\n            // 多选题，用逗号分隔选项ID\r\n            answer = q.answer.join(',')\r\n          } else if (q.answer !== '') {\r\n            // 所有单选题（包括判断题）直接使用选项ID\r\n            answer = q.answer\r\n          }\r\n          \r\n          return {\r\n            topicId: q.id,\r\n            answer: answer\r\n          }\r\n        })\r\n\r\n        const params = {\r\n          examId: this.examId,\r\n          paperId: this.paperId,\r\n          studentId: this.studentId,\r\n          topicList: topicList\r\n        }\r\n\r\n        logger.log('提交参数:', params)\r\n\r\n        const res = await submitPaper(params)\r\n        if (res.code === 200) {\r\n          // 清除计时器\r\n          if (this.timer) {\r\n            clearInterval(this.timer)\r\n          }\r\n\r\n          // 提交成功，结束电脑使用\r\n          await endComputerInfo({\r\n            fingerprint: localStorage.getItem('fingerprint')\r\n          })\r\n\r\n          // 跳转到感谢页\r\n          this.$router.push({\r\n            name: 'ExamThanks',\r\n            query: {\r\n              examId: this.examId,\r\n              title: this.examInfo.title,\r\n              duration: this.examInfo.duration,\r\n              questionCount: this.questions.length,\r\n              score: res.data?.score, // 如果有即时评分\r\n              type: res.data?.score !== undefined ? 'immediate' : 'delay'\r\n            }\r\n          })\r\n        } else {\r\n          this.$message.error(res.msg || '交卷失败')\r\n        }\r\n      } catch (error) {\r\n        logger.error('交卷失败:', error)\r\n        this.$message.error('交卷失败')\r\n      }\r\n    },\r\n    formatOptions(options) {\r\n      if (!options || !Array.isArray(options)) return []\r\n      \r\n      return options.map(opt => ({\r\n        id: opt.id, // 选项的原始id\r\n        code: opt.id, // 用于v-model绑定，直接使用id\r\n        content: opt.content,\r\n        isRight: opt.isRight === 1,\r\n        imageUrl: opt.imageUrl\r\n      }))\r\n    },\r\n    groupQuestions() {\r\n      const groups = {}\r\n      this.questions.forEach(q => {\r\n        const type = q.type\r\n        if (!groups[type]) {\r\n          groups[type] = {\r\n            typeName: this.getQuestionType(type),\r\n            questions: [],\r\n            score: q.score,\r\n            totalScore: 0\r\n          }\r\n        }\r\n        groups[type].questions.push(q)\r\n        groups[type].totalScore += q.score\r\n      })\r\n      \r\n      this.questionGroups = Object.values(groups)\r\n    },\r\n    toggleFlag(question) {\r\n      question.isFlag = !question.isFlag\r\n    },\r\n    showAnswerCard() {\r\n      this.answerCardVisible = true\r\n    },\r\n    switchToQuestion(question) {\r\n      const index = this.questions.findIndex(q => q.id === question.id)\r\n      if (index !== -1) {\r\n        this.currentIndex = index\r\n        this.answerCardVisible = false\r\n        \r\n        if (Array.isArray(question.answer)) {\r\n          question.answered = question.answer.length > 0\r\n        } else {\r\n          question.answered = question.answer !== ''\r\n        }\r\n        \r\n        this.$nextTick(() => {\r\n          const questionEl = document.querySelector(`#question-${question.id}`)\r\n          if (questionEl) {\r\n            questionEl.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async startExam() {\r\n      try {\r\n        const params = {\r\n          examId: this.$route.query.examId,\r\n          studentId: this.$route.query.studentId,\r\n          paperId: this.$route.params.id\r\n        }\r\n        \r\n        if (!params.examId || !params.studentId || !params.paperId) {\r\n          this.$message.error('考试参数不完整')\r\n          this.$router.push('/exam')\r\n          return\r\n        }\r\n        \r\n        this.examId = params.examId\r\n        this.paperId = params.paperId\r\n        this.studentId = params.studentId\r\n\r\n        const res = await startExam(params)\r\n        if (res.code === 200) {\r\n          logger.log('开始考试成功')\r\n          await this.getExamPaper()\r\n        } else {\r\n          this.$message.error(res.msg || '开始考试失败')\r\n          this.$router.push('/exam')\r\n        }\r\n      } catch (error) {\r\n        logger.error('开始考试失败:', error)\r\n        // this.$message.error('开始考试失败')\r\n        this.$router.push('/exam')\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    logger.log('路由参数:', this.$route.params)\r\n    logger.log('考试信息:', this.examInfo)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.exam-paper {\r\n  min-height: 100vh;\r\n  background: #f5f7fa;\r\n  display: flex;\r\n}\r\n\r\n/* 左侧答题卡样式 */\r\n.answer-card-sidebar {\r\n  width: 300px;\r\n  background: #fff;\r\n  border-right: 1px solid #EBEEF5;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 60px;\r\n  bottom: 0;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 右侧内容区样式 */\r\n.main-content {\r\n  flex: 1;\r\n  margin-left: 300px;\r\n  position: relative;\r\n  padding: 20px;\r\n  height: calc(100vh - 20px);  /* 设置高度，减去顶部导航和间距 */\r\n  margin-top: 20px;  /* 与左侧答题卡对齐 */\r\n  overflow-y: auto;  /* 添加垂直滚动条 */\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n/* 右侧固定导航栏样式 */\r\n.nav-sidebar {\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 80px;\r\n  width: 200px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  z-index: 1;  /* 确保导航栏在内容之上 */\r\n}\r\n\r\n.nav-content {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n/* 时间信息样式 */\r\n.time-info {\r\n  text-align: center;\r\n  padding: 15px 0;\r\n}\r\n\r\n.time-label {\r\n  font-size: 16px;\r\n  color: #606266;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.time-value {\r\n  font-size: 24px;\r\n  color: #F56C6C;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 提交按钮样式 */\r\n.submit-btn {\r\n  width: 100%;\r\n  height: 40px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 导航按钮样式 */\r\n.nav-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  \r\n  .el-button {\r\n    width: 100%;\r\n    justify-content: center;\r\n    \r\n    i {\r\n      margin: 0 5px;\r\n    }\r\n  }\r\n}\r\n\r\n/* 题目内容区域样式 */\r\n.paper-content {\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  margin-right: 210px; /* 为右侧导航栏留出空间 */\r\n  margin-top :  -20px;\r\n}\r\n\r\n.question-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.section-title {\r\n  background: #409EFF;\r\n  color: #fff;\r\n  padding: 12px 20px;\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.question-item {\r\n  padding: 20px;\r\n  border: 1px solid #EBEEF5;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  scroll-margin-top: 20px;  /* 滚动时预留顶部间距 */\r\n}\r\n\r\n.question-header {\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.question-index {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.question-type {\r\n  color: #409EFF;\r\n  margin-right: 10px;\r\n}\r\n\r\n.question-score {\r\n  color: #F56C6C;\r\n}\r\n\r\n.flag-btn {\r\n  margin-left: auto;\r\n  color: #909399;\r\n  cursor: pointer;\r\n}\r\n\r\n.flag-btn i.active {\r\n  color: #F56C6C;\r\n}\r\n\r\n.question-content {\r\n  padding: 20px 0;\r\n  line-height: 1.6;\r\n}\r\n\r\n/* 富文本内容样式 */\r\n.question-content :deep(img) {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.question-content :deep(p) {\r\n  margin: 10px 0;\r\n}\r\n\r\n.question-content :deep(table) {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 10px 0;\r\n}\r\n\r\n.question-content :deep(td),\r\n.question-content :deep(th) {\r\n  border: 1px solid #EBEEF5;\r\n  padding: 8px;\r\n}\r\n\r\n.option-content {\r\n  line-height: 1.6;\r\n  \r\n  :deep(img) {\r\n    max-width: 100%;\r\n    height: auto;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  :deep(p) {\r\n    margin: 5px 0;\r\n  }\r\n}\r\n\r\n.option-item {\r\n  display: block;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* 优化选项样式 */\r\n:deep(.el-radio),\r\n:deep(.el-checkbox) {\r\n  width: 100%;\r\n  margin-right: 0;\r\n  padding: 15px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  margin-bottom: 10px;\r\n  \r\n  &.is-checked {\r\n    border-color: #409EFF;\r\n    background-color: #ecf5ff;\r\n  }\r\n  \r\n  .el-radio__input,\r\n  .el-checkbox__input {\r\n    margin-top: 2px;\r\n    \r\n    input[type=\"radio\"],\r\n    input[type=\"checkbox\"] {\r\n      position: absolute;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  \r\n  .el-radio__label,\r\n  .el-checkbox__label {\r\n    white-space: normal;\r\n    padding-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n\r\n.options {\r\n  width: 100% !important;\r\n  padding: 10px 0;\r\n}\r\n.el-radio-group{\r\n  width: 100% !important;\r\n}\r\n\r\n.el-radio{\r\n    display :  flex  ;       \r\n    flex-direction :  row;\r\n    align-items: center;\r\n}\r\n\r\n/* 选项悬停效果 */\r\n:deep(.el-radio:hover),\r\n:deep(.el-checkbox:hover) {\r\n  border-color: #409EFF;\r\n}\r\n\r\n/* 答题卡样式 */\r\n.answer-card {\r\n  padding: 20px;\r\n}\r\n\r\n.question-type-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.type-header {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #EBEEF5;\r\n}\r\n\r\n.question-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.question-number {\r\n  height: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #fff;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    border-color: #409EFF;\r\n    color: #409EFF;\r\n  }\r\n\r\n  &.answered {\r\n    background: #67C23A;\r\n    color: #fff;\r\n    border-color: #67C23A;\r\n  }\r\n\r\n  &.current {\r\n    background: #409EFF;\r\n    color: #fff;\r\n    border-color: #409EFF;\r\n  }\r\n\r\n  &.flagged {\r\n    border-color: #F56C6C;\r\n    color: #F56C6C;\r\n\r\n    &.answered {\r\n      background: #F56C6C;\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n\r\n.answer-stats {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 20px;\r\n  background: #f5f7fa;\r\n  border-radius: 4px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.stats-item {\r\n  text-align: center;\r\n}\r\n\r\n.stats-label {\r\n  color: #606266;\r\n  margin-right: 5px;\r\n}\r\n\r\n.stats-value {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n/* 优化弹窗样式 */\r\n:deep(.el-dialog__header) {\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #EBEEF5;\r\n}\r\n\r\n:deep(.el-dialog__body) {\r\n  padding: 20px;\r\n}\r\n\r\n:deep(.el-dialog__headerbtn) {\r\n  top: 15px;\r\n}\r\n\r\n/* 移除答题卡弹窗相关样式 */\r\n:deep(.el-dialog) {\r\n  display: none;\r\n}\r\n\r\n/* 美化滚动条样式 */\r\n.main-content::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.main-content::-webkit-scrollbar-track {\r\n  background: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.main-content::-webkit-scrollbar-thumb {\r\n  background: #dcdfe6;\r\n  border-radius: 4px;\r\n}\r\n\r\n.main-content::-webkit-scrollbar-thumb:hover {\r\n  background: #c0c4cc;\r\n}\r\n\r\n/* 优化答题卡已答题样式 */\r\n.question-number.answered {\r\n  background: #67C23A;\r\n  color: #fff;\r\n  border-color: #67C23A;\r\n}\r\n\r\n.question-number.answered:hover {\r\n  opacity: 0.9;\r\n  border-color: #67C23A;\r\n  color: #fff;\r\n}\r\n</style> ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./paper.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./paper.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./paper.vue?vue&type=template&id=23754225&scoped=true\"\nimport script from \"./paper.vue?vue&type=script&lang=js\"\nexport * from \"./paper.vue?vue&type=script&lang=js\"\nimport style0 from \"./paper.vue?vue&type=style&index=0&id=23754225&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23754225\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_l","questionGroups","group","index","key","_v","_s","typeName","questions","length","totalScore","question","qIndex","id","class","answered","currentQuestion","isFlag","on","$event","switchToQuestion","answeredCount","flaggedCount","score","attrs","concat","toggleFlag","active","domProps","content","includes","type","handleAnswer","model","value","answer","callback","$$v","$set","expression","options","option","code","_e","formatTime","remainingTime","confirmSubmit","prevQuestion","nextQuestion","staticRenderFns","name","data","examInfo","title","duration","passScore","currentIndex","timer","submitDialogVisible","questionTypes","answerCardVisible","examId","paperId","studentId","computed","filter","q","created","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","getQuestionTypes","initExamInfo","startExam","a","beforeDestroy","clearInterval","methods","_this2","_callee2","res","_t","_context2","p","getDictDataList","pageNum","pageSize","dictType","v","rows","reduce","acc","item","dictValue","dictLabel","logger","log","error","$message","query","$route","parseInt","startTimer","getExamPaper","_this3","_callee3","_t2","_context3","params","questionPapgerTopicList","map","topic","questionsTopic","isMultiple","topicType","formatOptions","questionOptionsList","analysis","groupQuestions","_this4","setInterval","warning","seconds","hours","Math","floor","minutes","secs","toString","padStart","getQuestionType","_this$questionTypes$t","updateAnswerCardStatus","forEach","Array","isArray","switchQuestion","getFlatQuestions","getCurrentFlatIndex","_this5","flatQuestions","findIndex","scrollToCurrentQuestion","_this6","$nextTick","questionEl","document","querySelector","scrollIntoView","behavior","block","_this7","_callee4","unansweredQuestions","unansweredCount","unansweredByType","message","_t5","_context4","push","Object","entries","_ref","_ref2","_slicedToArray","$confirm","confirmButtonText","cancelButtonText","dangerouslyUseHTMLString","submitAnswers","debug","_this8","_callee5","topicList","_res$data","_res$data2","_t6","_context5","join","topicId","submitPaper","endComputerInfo","fingerprint","localStorage","getItem","$router","questionCount","undefined","msg","opt","isRight","imageUrl","_this9","groups","values","showAnswerCard","_this0","_callee6","_t7","_context6","mounted","component"],"sourceRoot":""}